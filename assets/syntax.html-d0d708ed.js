import{_ as n,o as s,c as a,e as t}from"./app-04e6f892.js";const p={},e=t(`<h2 id="基础" tabindex="-1"><a class="header-anchor" href="#基础" aria-hidden="true">#</a> 基础</h2><h4 id="注释" tabindex="-1"><a class="header-anchor" href="#注释" aria-hidden="true">#</a> 注释</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># aaa</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="字符串" tabindex="-1"><a class="header-anchor" href="#字符串" aria-hidden="true">#</a> 字符串</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>a <span class="token operator">=</span> <span class="token string">&quot;xxx&quot;</span>
b <span class="token operator">=</span> <span class="token string">&#39;xxx&#39;</span>
c <span class="token operator">=</span> <span class="token string">&quot;xx&quot;</span> \\
    <span class="token string">&quot;xx&quot;</span>
<span class="token comment"># 多行</span>
d <span class="token operator">=</span> <span class="token triple-quoted-string string">&quot;&quot;&quot;
xxxxxx
bbbbb
&quot;&quot;&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="字符串运算" tabindex="-1"><a class="header-anchor" href="#字符串运算" aria-hidden="true">#</a> 字符串运算</h5><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>name <span class="token operator">=</span> <span class="token string">&quot;hello world!&quot;</span>

<span class="token comment"># 切片</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># hel</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># hel</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># hel</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># d!</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># d!</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># d</span>
<span class="token comment"># 开始:结尾:步长</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">6</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># hlo</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># hlowrd </span>
<span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token builtin">len</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># hlowrd </span>
<span class="token comment"># 反转</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># !dlrow olleh</span>

<span class="token comment"># 分割</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;hello world!&quot;</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39;o&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># [&#39;hell&#39;, &#39; w&#39;, &#39;rld!&#39;]</span>

<span class="token comment"># 拼接</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token operator">+</span><span class="token string">&#39; &#39;</span><span class="token operator">+</span><span class="token string">&#39;world&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;world&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;python&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;0&#39;</span><span class="token operator">*</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token comment"># 000</span>

<span class="token comment"># 定位</span>
<span class="token comment"># &quot;hello world!&quot;.index(&quot;x&quot;) # 找不到时报错 —— 不推荐，改为 find 方法❗</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;hello world!&#39;</span><span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&#39;o&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 4</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;hello world!&#39;</span><span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&#39;o&#39;</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 7</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;hello world!&#39;</span><span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&#39;z&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># -1 —— 找不到！</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;hello world!&#39;</span><span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">&#39;0&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 2</span>
<span class="token comment"># 类似方法还有： startwith、endwith</span>

<span class="token comment"># 替换</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;hello world!&quot;</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&#39;o&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Z&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># hellZ wZrld!</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;hello world!&quot;</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&#39;o&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Z&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># hellZ world!</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="格式化输出" tabindex="-1"><a class="header-anchor" href="#格式化输出" aria-hidden="true">#</a> 格式化输出</h5><div class="custom-container tip"><p class="custom-container-title">提示</p><p>参考：</p><ul><li>https://blog.csdn.net/moqisaonianqiong/article/details/114674204</li></ul></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 大写/小写</span>
s <span class="token operator">=</span> <span class="token string">&quot;Aa&quot;</span>
s<span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span>
s<span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># 左右优化</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;v&quot;</span><span class="token punctuation">.</span>center<span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># ***v*** —— 居中，填充</span>
<span class="token string">&quot;    v   &quot;</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># trim —— 清空左右空格</span>
<span class="token string">&quot;666    v   &quot;</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token string">&#39;6&#39;</span><span class="token punctuation">)</span> <span class="token comment"># trim 6</span>
<span class="token comment"># 类似还有 lstrip、rstrip</span>
<span class="token comment"># 另外，后面提到的 format 函数可以实现同样的功能！</span>

<span class="token triple-quoted-string string">&quot;&quot;&quot;
传统的格式化输出方法： %
%s: 为字符占位，任意类型
%d: 为整数占位
%f: 为浮点数占位
&quot;&quot;&quot;</span>
s1 <span class="token operator">=</span> <span class="token string">&#39;你好，我叫%s！！！今年%d岁！&#39;</span><span class="token operator">%</span><span class="token punctuation">(</span><span class="token string">&#39;Eason&#39;</span><span class="token punctuation">,</span> <span class="token number">18.5</span><span class="token punctuation">)</span> <span class="token comment"># 18.5 -&gt; 18</span>

<span class="token triple-quoted-string string">&quot;&quot;&quot;
format函数
&quot;&quot;&quot;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;你好，我叫{}，今年{}，性别{}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token string">&#39;鸡哥&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;练习两年半&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;男&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># 你好，我叫鸡哥，今年练习两年半，性别男</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;你好，我叫{0}，今年{2}，性别{1}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token string">&#39;鸡哥&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;练习两年半&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;男&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 你好，我叫鸡哥，今年男，性别练习两年半</span>

<span class="token triple-quoted-string string">&quot;&quot;&quot;
语法糖：
F表达式（F、f均可，python3.6以上支持）
&quot;&quot;&quot;</span>
name<span class="token operator">=</span><span class="token string">&quot;eason&quot;</span>
s3<span class="token operator">=</span><span class="token string-interpolation"><span class="token string">F&#39;你好，我叫</span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span><span class="token string">！！！&#39;</span></span>
<span class="token keyword">print</span><span class="token punctuation">(</span>s3<span class="token punctuation">)</span>

<span class="token comment">######################</span>
<span class="token comment"># 格式化输出格式</span>
<span class="token comment">######################</span>

<span class="token comment"># 指定小数点后几位 —— 四舍五入！</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;橘子： {:.2f}元/斤&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token number">3.6666</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 橘子： 3.67元/斤</span>

<span class="token comment"># 百分比输出</span>
percent<span class="token operator">=</span><span class="token number">0.472352</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;占比： </span><span class="token interpolation"><span class="token punctuation">{</span>percent<span class="token punctuation">:</span><span class="token format-spec">.2%</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span> <span class="token comment"># 占比： 47.23%</span>

<span class="token comment"># 对齐/居中</span>
s <span class="token operator">=</span> <span class="token string">&quot;hello&quot;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;{0:*&lt;20}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># hello*************** —— 左对齐</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;{0:*&gt;20}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># ***************hello —— 右对齐</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;{0:*^20}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># *******hello******** —— 居中</span>
<span class="token comment"># {0:&lt;20} 保留前20位</span>

<span class="token comment"># 数字格式</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;{0:,}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token number">123456789.123456</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 123,456,789.123456 —— 千位分隔符</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;{0:,.2f}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token number">123456789.123456</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 123,456,789.12 —— 浮点数小数部分的精度</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;{0:,.2}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token number">123456789.123456</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 1.2e+08 —— 最大显示长度</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;{0:.2}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token string">&quot;123.456&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 12</span>

<span class="token comment"># 类型：</span>
<span class="token triple-quoted-string string">&quot;&quot;&quot;
整数：
s —— 字符串
b —— 二进制
c —— Unicode字符
d —— 十进制
o —— 八进制
x or X —— 十六进制
&quot;&quot;&quot;</span>
b <span class="token operator">=</span> <span class="token number">1024</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;{0:b}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 10000000000</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;{0:c}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># Ѐ</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;{0:d}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 1024</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;{0:o}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 2000</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;{0:x}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 400</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;{0:X}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 400</span>
<span class="token triple-quoted-string string">&quot;&quot;&quot;
浮点数：
f
%
e or E —— 科学计数法
g or G —— 在 e / f 中切换
&quot;&quot;&quot;</span>
b <span class="token operator">=</span> <span class="token number">10000000003.1415926</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;{0:.2f}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 10000000003.14</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;{0:.2%}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 1000000000314.16%</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;{0:.2e}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 1.00e+10</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;{0:.2E}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 1.00E+10</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="编码-解码" tabindex="-1"><a class="header-anchor" href="#编码-解码" aria-hidden="true">#</a> 编码/解码</h5><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token builtin">str</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span>encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">,</span>errors<span class="token operator">=</span><span class="token string">&#39;strict/ignore/replace&#39;</span><span class="token punctuation">)</span>
<span class="token builtin">bytes</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span>encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">,</span>errors<span class="token operator">=</span><span class="token string">&#39;strict/ignore/replace&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># strict —— 抛出报错</span>
<span class="token comment"># ignore —— 忽略</span>
<span class="token comment"># replace —— 错误解析换成 ? 问号</span>

<span class="token comment"># 编码</span>
s <span class="token operator">=</span> <span class="token string">&quot;你好&quot;</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">&#39;gbk&#39;</span><span class="token punctuation">,</span> errors<span class="token operator">=</span><span class="token string">&quot;ignore&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token comment"># b&#39;\\xc4\\xe3\\xba\\xc3&#39;</span>

<span class="token comment"># 解码</span>
b <span class="token operator">=</span> <span class="token builtin">bytes</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token string">&#39;gbk&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token comment"># 你好</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="数据验证" tabindex="-1"><a class="header-anchor" href="#数据验证" aria-hidden="true">#</a> 数据验证</h5><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token triple-quoted-string string">&quot;&quot;&quot;
str.isdigit() —— 所有字符都是数字（阿拉伯数字，1=True，一=False）
str.isnumeric() —— 所有字符都是数字（1、一、壹、Ⅰ（罗马数字）、①=True，one（不是一个字符）=False）
str.isalpha() —— 所有字符都是字母（包含中文字符）
str.isalnum() —— 所有字符都是数字或者字母（包含中文字符）
str.islower() —— 所有字符都是小写
str.isupper() —— 所有字符都是大写
str.istitle() —— 所有字符都是首字母大写
str.isspace() —— 所有字符都是空白字符（\\n,\\t,...）
&quot;&quot;&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="正则表达式" tabindex="-1"><a class="header-anchor" href="#正则表达式" aria-hidden="true">#</a> 正则表达式</h5><p>正则表达式是一个特殊的字符序列，它能帮助用户便捷地检查一个字符串是否符合某种规则/模式</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 位置</span>
$
<span class="token operator">^</span>

<span class="token comment"># 字符</span>
<span class="token punctuation">.</span> —— 任意
\\w —— 字母、数字、下划线
\\W —— 非\\w
\\s —— 空白字符，如 \\t
\\S —— 非\\s
\\b —— 空格
\\d —— 任意十进制

<span class="token comment"># 次数</span>
? —— <span class="token number">0</span><span class="token operator">~</span><span class="token number">1</span>
<span class="token operator">+</span> —— <span class="token number">1</span><span class="token operator">~</span>n
<span class="token operator">*</span> —— <span class="token number">0</span><span class="token operator">~</span>n
<span class="token punctuation">{</span>n<span class="token punctuation">}</span> —— n
<span class="token punctuation">{</span>n<span class="token punctuation">,</span><span class="token punctuation">}</span> —— n<span class="token operator">~</span>∞
<span class="token punctuation">{</span>n<span class="token punctuation">,</span>m<span class="token punctuation">}</span> —— n<span class="token operator">~</span>m

<span class="token comment"># 分组</span>
<span class="token punctuation">(</span><span class="token punctuation">)</span> —— 分组
<span class="token operator">|</span> —— 或者
<span class="token punctuation">[</span><span class="token punctuation">]</span> —— 包含其一
<span class="token punctuation">[</span><span class="token operator">^</span><span class="token punctuation">]</span> —— 排除全部
<span class="token punctuation">[</span>\\u4e00<span class="token operator">-</span>\\u9fa5<span class="token punctuation">]</span> —— 任意一个汉字
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>re模块： 用于实现正则表达式的操作。内置模块，不需要安装，导入即可使用。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> re

<span class="token comment">#######################</span>
<span class="token comment"># 查找</span>
<span class="token comment">#######################</span>

<span class="token comment"># re.match(pattern,string,flags=0) —— 从字符串开始位置进行匹配。如果匹配成功，结果为Match对象；否则结果为None。</span>
pattern <span class="token operator">=</span> <span class="token string">&quot;python\\d\\.\\d+&quot;</span>
<span class="token keyword">match</span> <span class="token operator">=</span> re<span class="token punctuation">.</span><span class="token keyword">match</span><span class="token punctuation">(</span>pattern<span class="token punctuation">,</span><span class="token string">&quot;Python3.10 ever day!&quot;</span><span class="token punctuation">,</span>re<span class="token punctuation">.</span>IGNORECASE<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token keyword">match</span><span class="token punctuation">)</span> <span class="token comment"># &lt;re.Match object; span=(0, 10), match=&#39;Python3.10&#39;&gt;</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token keyword">match</span><span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 0</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token keyword">match</span><span class="token punctuation">.</span>end<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 10</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token keyword">match</span><span class="token punctuation">.</span>span<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># (0, 10)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token keyword">match</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># Python3.10</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token keyword">match</span><span class="token punctuation">.</span>string<span class="token punctuation">)</span> <span class="token comment"># Python3.10 ever day!</span>

<span class="token comment"># re.search(pattern,string,flags=0) —— 用于在整个字符串中搜索第一个匹配的值。如果匹配成功，返回Match对象；否则返回None</span>
pattern <span class="token operator">=</span> <span class="token string">&quot;python\\d\\.\\d+&quot;</span>
search <span class="token operator">=</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span>pattern<span class="token punctuation">,</span><span class="token string">&quot;I study Python3.10 ever day!&quot;</span><span class="token punctuation">,</span>re<span class="token punctuation">.</span>IGNORECASE<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>search<span class="token punctuation">)</span> <span class="token comment"># &lt;re.Match object; span=(8, 18), match=&#39;Python3.10&#39;&gt;</span>

<span class="token comment"># re.findall(pattern,string,flags=0) —— 用于在整个字符串搜索所有符合正则表达式的值。返回list</span>

<span class="token comment">#######################</span>
<span class="token comment"># 加工</span>
<span class="token comment">#######################</span>
<span class="token comment"># re.sub(pattern,repl,string,count,flags=0) —— 实现字符串的替换</span>
<span class="token comment"># re.split(pattern,string,maxsplit,flags=0)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="标准输入-输出" tabindex="-1"><a class="header-anchor" href="#标准输入-输出" aria-hidden="true">#</a> 标准输入/输出</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># 转义符</span>
\\n —— 换行
\\r —— 清空行
\\t
\\b
\\\\
<span class="token comment"># 关闭转义符</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">r&quot;xxx&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">R&quot;xxx&quot;</span><span class="token punctuation">)</span>


name <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;请输入：&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="变量定义-运算" tabindex="-1"><a class="header-anchor" href="#变量定义-运算" aria-hidden="true">#</a> 变量定义/运算</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>a <span class="token operator">=</span> <span class="token number">1</span>
ddd <span class="token operator">=</span> a <span class="token operator">+</span> \\
      b <span class="token operator">+</span> \\
      c 

<span class="token comment"># 约定： 大写为常量</span>
PI <span class="token operator">=</span> <span class="token number">3.14</span>


<span class="token comment"># 整数 Int</span>
a <span class="token operator">=</span> <span class="token number">100</span>
a <span class="token operator">=</span> <span class="token operator">+</span><span class="token number">100</span>
a <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">100</span>

<span class="token comment"># 浮点 float</span>
a <span class="token operator">=</span> <span class="token number">99.99</span>


<span class="token comment"># 布尔 boolean</span>
bb <span class="token operator">=</span> <span class="token boolean">True</span> <span class="token comment"># 值 1</span>
cc <span class="token operator">=</span> <span class="token boolean">False</span> <span class="token comment"># 值 0</span>


<span class="token comment"># 运算</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token operator">+</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token comment"># 9</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token comment"># -1</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token operator">*</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token comment"># 20 </span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token operator">/</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token comment"># 0.8</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token operator">//</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token comment"># 0 —— 向下取整</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">7</span> <span class="token operator">%</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token comment"># 1 —— 取余</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">**</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token comment"># 1024 —— 乘方</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">+</span><span class="token boolean">True</span><span class="token punctuation">)</span> <span class="token comment"># 2</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">+</span><span class="token boolean">False</span><span class="token punctuation">)</span> <span class="token comment"># 1</span>

<span class="token comment"># 判断</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token operator">&gt;</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token comment"># True</span>
<span class="token comment"># &gt; 大于</span>
<span class="token comment"># &gt;= 大于等于</span>
<span class="token comment"># &lt; 小于</span>
<span class="token comment"># &lt;= 小于等于</span>
<span class="token comment"># != 不等于</span>
<span class="token comment"># == 等于</span>

<span class="token comment"># 逻辑运算</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token boolean">True</span> <span class="token keyword">and</span> <span class="token boolean">True</span><span class="token punctuation">)</span> <span class="token comment"># True</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token keyword">not</span> <span class="token boolean">True</span><span class="token punctuation">)</span> <span class="token comment"># False</span>
a <span class="token operator">=</span> <span class="token number">3</span><span class="token operator">&gt;</span><span class="token number">1</span> <span class="token keyword">or</span> <span class="token number">2</span><span class="token operator">&lt;</span><span class="token number">1</span>
<span class="token comment"># and</span>
<span class="token comment"># or</span>
<span class="token comment"># not</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="变量作用范围-global-nonlocal" tabindex="-1"><a class="header-anchor" href="#变量作用范围-global-nonlocal" aria-hidden="true">#</a> 变量作用范围：global/nonlocal</h5><p>默认 —— 方法内部的修改不影响外部变量</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>a <span class="token operator">=</span> <span class="token number">1</span> <span class="token comment"># 全局变量</span>

<span class="token keyword">def</span> <span class="token function">abc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
  a <span class="token operator">=</span> <span class="token number">2</span> <span class="token comment"># 局部变量</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>

abc<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 2</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment"># 1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>global（全局变量） —— 获得最外层变量</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>a <span class="token operator">=</span> <span class="token number">1</span> <span class="token comment"># 全局变量</span>
<span class="token keyword">def</span> <span class="token function">abc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">global</span> a
  <span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
  a <span class="token operator">=</span> <span class="token number">2</span> <span class="token comment"># 局部变量</span>
abc<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 1</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment"># 2</span>

<span class="token comment">################</span>

a <span class="token operator">=</span> <span class="token number">1</span>
<span class="token keyword">def</span> <span class="token function">abc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
  a <span class="token operator">=</span> <span class="token number">2</span>
  <span class="token keyword">def</span> <span class="token function">xxxx</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">global</span> a <span class="token comment"># 获取最外层变量</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
    a <span class="token operator">=</span> <span class="token number">3</span>
  xxxx<span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
abc<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 1 \\n 2</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment"># 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>nonlocal —— 外层变量</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>a <span class="token operator">=</span> <span class="token number">1</span>
<span class="token keyword">def</span> <span class="token function">abc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
  a <span class="token operator">=</span> <span class="token number">2</span>
  <span class="token keyword">def</span> <span class="token function">xxxx</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">nonlocal</span> a <span class="token comment"># 获取上一层变量</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
    a <span class="token operator">=</span> <span class="token number">3</span>
  xxxx<span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
abc<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 2 \\n 3</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment"># 1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="列表-list" tabindex="-1"><a class="header-anchor" href="#列表-list" aria-hidden="true">#</a> 列表（List）</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 不要求统一数据类型</span>
<span class="token builtin">list</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">&quot;hello world!&quot;</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">]</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># 1</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># 4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运算</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 加法</span>
list_1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span>
list_2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>list_1 <span class="token operator">+</span> list_2<span class="token punctuation">)</span> <span class="token comment"># [1, 2, 3, 4, 2, 3]</span>

<span class="token comment"># 乘法</span>
list_1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>list_1 <span class="token operator">*</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token comment"># [1, 2, 3, 1, 2, 3, 1, 2, 3]</span>

<span class="token comment"># 提取</span>
list_1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>list_1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># [2]</span>

<span class="token comment"># 反转</span>
list_1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>list_1<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># [3, 2, 1]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>list_1<span class="token punctuation">.</span>reverse<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># None</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>list_1<span class="token punctuation">)</span> <span class="token comment"># [3, 2, 1]</span>

<span class="token comment"># 排序</span>
<span class="token comment"># ASCII 编码排序： 0~9&lt;A~Z&lt;a~z</span>
list_1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;world&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hw&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;python&quot;</span><span class="token punctuation">]</span>
list_1<span class="token punctuation">.</span>sort<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>list_1<span class="token punctuation">)</span> <span class="token comment"># [&#39;hello&#39;, &#39;hw&#39;, &#39;python&#39;, &#39;world&#39;]</span>
list_1<span class="token punctuation">.</span>sort<span class="token punctuation">(</span>reverse<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>list_1<span class="token punctuation">)</span> <span class="token comment"># [&#39;world&#39;, &#39;python&#39;, &#39;hw&#39;, &#39;hello&#39;]</span>

<span class="token comment"># 计数</span>
list_1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;world&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hw&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;python&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>list_1<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 2</span>

<span class="token comment"># 求和</span>
list_1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">sum</span><span class="token punctuation">(</span>list_1<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 6</span>
<span class="token keyword">from</span> functools <span class="token keyword">import</span> <span class="token builtin">reduce</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">reduce</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">,</span>y<span class="token punctuation">:</span>x<span class="token operator">+</span>y<span class="token punctuation">,</span> list_1<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 6</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>增加/删除</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># append —— 加到最后</span>
a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span>
a<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>

<span class="token comment"># extend —— 添加（多个）到最后</span>
a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span>
a<span class="token punctuation">.</span>extend<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment"># [1, 2, 3, 4, 5, 6]</span>
<span class="token comment"># 与 [1,2,3] + [4,5,6] 效果类似</span>

<span class="token comment"># insert</span>
a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span>
a<span class="token punctuation">.</span>insert<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment"># [1, 2, 99, 3]</span>

<span class="token comment"># pop —— 弹出最后</span>
a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 3</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment"># [1, 2]</span>

<span class="token comment"># del —— 删除关键字 （在计算机内存层面删除）</span>
a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span>
<span class="token keyword">del</span> a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token comment"># 删除元素</span>
<span class="token keyword">del</span> a <span class="token comment"># 删除数组</span>

<span class="token comment"># remove —— 删除匹配的</span>
a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># None</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment"># [2, 3, 1]</span>

<span class="token comment"># clear</span>
a<span class="token punctuation">.</span>clear<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>定位</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>index<span class="token punctuation">(</span><span class="token number">99</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>复制</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span>
b <span class="token operator">=</span> a<span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="元组-tuple" tabindex="-1"><a class="header-anchor" href="#元组-tuple" aria-hidden="true">#</a> 元组（Tuple）</h4><p>元组与列表类似，不同之处在于元组的元素不能修改。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># list</span>
a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span>
<span class="token comment"># tuple</span>
a <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span>

<span class="token comment"># 报错：修改元素</span>
a <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span>
a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">99</span>

Traceback <span class="token punctuation">(</span>most recent call last<span class="token punctuation">)</span><span class="token punctuation">:</span>
  File <span class="token string">&quot;xxxx\\vuepress2-note\\code\\demo-python\\list-test.py&quot;</span><span class="token punctuation">,</span> line <span class="token number">49</span><span class="token punctuation">,</span> <span class="token keyword">in</span> <span class="token operator">&lt;</span>module<span class="token operator">&gt;</span>
    a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">99</span>
    <span class="token operator">~</span><span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span>
TypeError<span class="token punctuation">:</span> <span class="token string">&#39;tuple&#39;</span> <span class="token builtin">object</span> does <span class="token keyword">not</span> support item assignment

<span class="token comment"># 拼接 —— 不允许修改，但是其他可行</span>
a <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span>
b <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a <span class="token operator">+</span> b<span class="token punctuation">)</span> <span class="token comment"># (1, 2, 3, 4, [1, 2])</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>坑： 只有一个值时，会被识别为普通值，而不是元组</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 1</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># (1,) —— 单值时，元组的写法❗</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># (1, 2)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="集合-set" tabindex="-1"><a class="header-anchor" href="#集合-set" aria-hidden="true">#</a> 集合（Set）</h4><p>集合是无序的，元素唯一的！ —— 集合用于去重</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">set</span><span class="token punctuation">(</span><span class="token string">&quot;123321&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># {&#39;1&#39;, &#39;3&#39;, &#39;2&#39;}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># {1, 2, 3}</span>
d <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token string">&quot;年龄&quot;</span><span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">,</span>
  <span class="token string">&quot;名字&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;橘子&quot;</span>
<span class="token punctuation">}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">set</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># {&#39;名字&#39;, &#39;年龄&#39;}</span>

<span class="token comment"># 语法糖</span>
<span class="token comment"># tips： 使用这种形式时，不能传入列表/字典</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment"># {1, 2, 3}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>操作</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># add</span>
a <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># None</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># None</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment"># {1, 2, 3, 6}</span>

<span class="token comment"># update —— 合并两个集合</span>
a <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">}</span>
b <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>update<span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># None</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment"># {1, 2, 3, 4, 5}</span>

<span class="token comment"># remove —— 删除，没有就报错</span>
<span class="token comment"># discard —— 删除，没有就忽略</span>
<span class="token comment"># pop —— 随机删除</span>

<span class="token comment"># 交集/并集</span>
a <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">}</span>
b <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">}</span>
<span class="token comment"># &amp; —— 交集</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a <span class="token operator">&amp;</span> b<span class="token punctuation">)</span> <span class="token comment"># {3}</span>
<span class="token comment"># | —— 并集</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a <span class="token operator">|</span> b<span class="token punctuation">)</span> <span class="token comment"># {1, 2, 3, 4, 5}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="字典-dict" tabindex="-1"><a class="header-anchor" href="#字典-dict" aria-hidden="true">#</a> 字典（Dict）</h4><p>字典是一种映射类型，它的元素是键值对。 字典的键必须为不可变类型，且不能重复。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>d <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token string">&quot;年龄&quot;</span><span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">,</span>
  <span class="token string">&quot;名字&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;橘子&quot;</span><span class="token punctuation">,</span>
  <span class="token number">1</span><span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token string">&quot;123&quot;</span>
<span class="token punctuation">}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span> <span class="token comment"># {&#39;年龄&#39;: 18, &#39;名字&#39;: &#39;橘子&#39;, 1: 18, (1, 2, 3): &#39;123&#39;}</span>

<span class="token comment"># 另一种定义方式</span>
d <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;年龄&quot;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&quot;姓名&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;橘子&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;123&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span> <span class="token comment"># {&#39;年龄&#39;: 18, &#39;姓名&#39;: &#39;橘子&#39;, 1: 18, (1, 2, 3): &#39;123&#39;}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>操作</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 增加</span>
d <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;橘子&quot;</span><span class="token punctuation">}</span>
d<span class="token punctuation">[</span><span class="token string">&quot;技能&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">&quot;python&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;java&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;js&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span> <span class="token comment"># {&#39;name&#39;: &#39;橘子&#39;, &#39;技能&#39;: (&#39;python&#39;, &#39;java&#39;, &#39;js&#39;)}</span>

<span class="token comment"># 删除</span>
d <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;橘子&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;技能&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token string">&quot;python&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;java&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;js&quot;</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
<span class="token keyword">del</span> d<span class="token punctuation">[</span><span class="token string">&#39;技能&#39;</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span> <span class="token comment"># {&#39;name&#39;: &#39;橘子&#39;}</span>
<span class="token comment"># pop —— 从字典中移除指定键，并返回该键所对应的值</span>
d <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;橘子&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;pop: &quot;</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># pop: 18</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;pop: &quot;</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># pop: None</span>
<span class="token comment"># popitem —— 用于从字典中删除最后一项，并以元组形式返回该项对应的键值</span>
obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;橘子&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;age&quot;</span><span class="token punctuation">:</span> <span class="token number">18</span>
<span class="token punctuation">}</span>
item <span class="token operator">=</span> obj<span class="token punctuation">.</span>popitem<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token comment"># (&#39;age&#39;, 18) —— 删除项</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token comment"># {&#39;name&#39;: &#39;橘子&#39;} —— 剩余字典内容</span>

<span class="token comment"># setdefault —— 设置键的默认值。若字典中该键已经存在，则忽略设置；若不存在，则添加键、值；</span>
obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;橘子&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;age&quot;</span><span class="token punctuation">:</span> <span class="token number">18</span>
<span class="token punctuation">}</span>
obj<span class="token punctuation">.</span>setdefault<span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">)</span>
obj<span class="token punctuation">.</span>setdefault<span class="token punctuation">(</span><span class="token string">&quot;技能&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&quot;python&quot;</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token comment"># {&#39;name&#39;: &#39;橘子&#39;, &#39;age&#39;: 18, &#39;技能&#39;: &#39;python&#39;}</span>
<span class="token comment"># update —— 更新值</span>
obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;橘子&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;age&quot;</span><span class="token punctuation">:</span> <span class="token number">18</span>
<span class="token punctuation">}</span>
obj<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">:</span> <span class="token number">35</span><span class="token punctuation">,</span> <span class="token string">&quot;skill&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token string">&quot;python&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;java&quot;</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token comment"># {&#39;name&#39;: &#39;橘子&#39;, &#39;age&#39;: 35, &#39;skill&#39;: (&#39;python&#39;, &#39;java&#39;)}</span>

<span class="token comment"># 查 —— 不安全，会报错</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>d<span class="token punctuation">[</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># 橘子</span>
<span class="token comment"># print(d[&quot;无&quot;]) # 报错： KeyError: &#39;无&#39;</span>
<span class="token comment"># 查 —— 安全，不报错，且能设定默认值</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;无&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># None</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;无&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;没有啦~&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 没有啦~</span>

<span class="token comment"># 遍历字典</span>
d <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;橘子&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">}</span>
<span class="token comment"># 获取所有键值（key）</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># dict_keys([&#39;name&#39;, &#39;age&#39;])</span>
<span class="token comment"># 获取所有键值对（item）</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># dict_items([(&#39;name&#39;, &#39;橘子&#39;), (&#39;age&#39;, 18)])</span>
<span class="token comment"># 获取所有值（value）</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>values<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># dict_values([&#39;橘子&#39;, 18])</span>

<span class="token comment"># 清空（clear） —— 将字典清空</span>
<span class="token comment"># 复制（copy） —— 创建字典的副本，修改原字典对象，不会影响其副本</span>

<span class="token comment"># fromkeys —— 创建一个新字典，默认值 None。注意：并不会看方法对象的内容。</span>
d <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;橘子&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>fromkeys<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;skill&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># {&#39;name&#39;: None, &#39;skill&#39;: None}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">.</span>fromkeys<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;skill&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># {&#39;name&#39;: None, &#39;skill&#39;: None}</span>
<span class="token comment"># 可以设定统一的默认值</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">.</span>fromkeys<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;skill&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># {&#39;name&#39;: 12, &#39;skill&#39;: 12}</span>
<span class="token comment"># ❗但是需要注意，值为对象类型时，指向同一个对象</span>
obj <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span>
fromkeys <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">.</span>fromkeys<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;key1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;key2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> obj<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>fromkeys<span class="token punctuation">)</span> <span class="token comment"># {&#39;key1&#39;: [1, 2, 3], &#39;key2&#39;: [1, 2, 3]}</span>
obj<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>fromkeys<span class="token punctuation">)</span> <span class="token comment"># {&#39;key1&#39;: [1, 2, 3, 4], &#39;key2&#39;: [1, 2, 3, 4]}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>拉链函数： 将对象中对应的元素打包成一个个元组，然后返回这些元组组成的内容</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>k <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span>
v <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;c&#39;</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">zip</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span>v<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># [(1, &#39;a&#39;), (2, &#39;b&#39;), (3, &#39;c&#39;)]</span>

<span class="token comment"># 元素个数不一致时，返回最短的</span>
s <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;s&#39;</span><span class="token punctuation">]</span>
k <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span>
v <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;c&#39;</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">zip</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> k<span class="token punctuation">,</span>v<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># [(&#39;s&#39;, 1, &#39;a&#39;)]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="关键字" tabindex="-1"><a class="header-anchor" href="#关键字" aria-hidden="true">#</a> 关键字</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 关键字</span>
<span class="token keyword">import</span> keyword
<span class="token keyword">print</span><span class="token punctuation">(</span>keyword<span class="token punctuation">.</span>kwlist<span class="token punctuation">)</span> <span class="token comment"># 列出 python 所有关键字</span>

a <span class="token operator">=</span> <span class="token boolean">None</span> <span class="token comment"># 空值 / 内置函数返回值（默认为None）</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="关键字-in" tabindex="-1"><a class="header-anchor" href="#关键字-in" aria-hidden="true">#</a> 关键字： in</h4><p>判断“集合”是否包含元素</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># in —— 判断对象是否在序列（列表/字符串/元组/字典）中</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;4&quot;</span> <span class="token keyword">in</span> <span class="token string">&quot;1234&quot;</span><span class="token punctuation">)</span> <span class="token comment"># True</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">4</span> <span class="token keyword">in</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># True</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span> <span class="token keyword">in</span> <span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;xxx&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment"># True —— 判断 keys 集合，不判断 values 集合</span>
<span class="token comment"># not in</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;4&quot;</span> <span class="token keyword">not</span> <span class="token keyword">in</span> <span class="token string">&quot;1234&quot;</span><span class="token punctuation">)</span> <span class="token comment"># False</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="关键字-is-有坑❗" tabindex="-1"><a class="header-anchor" href="#关键字-is-有坑❗" aria-hidden="true">#</a> 关键字： is （有坑❗）</h4><p>判断两个对象是否相同</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">###############################</span>
<span class="token comment"># 数字 / 【字符串】 / 【元组】 —— 所见即所得！</span>
<span class="token comment">###############################</span>

a <span class="token operator">=</span> <span class="token string">&quot;111&quot;</span>
b <span class="token operator">=</span> <span class="token string">&quot;222&quot;</span>
c <span class="token operator">=</span> <span class="token string">&quot;111&quot;</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>a <span class="token keyword">is</span> b<span class="token punctuation">)</span> <span class="token comment"># False</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a <span class="token keyword">is</span> c<span class="token punctuation">)</span> <span class="token comment"># True —— 相当于 Equals ？</span>

<span class="token comment">###############################</span>
<span class="token comment"># 列表 / 字典 / 集合 —— 对象比较</span>
<span class="token comment">###############################</span>

<span class="token comment"># 对象比较 False❗</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token keyword">is</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># False —— 列表</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;haha&quot;</span><span class="token punctuation">}</span> <span class="token keyword">is</span> <span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;haha&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment"># False —— 字典</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">}</span> <span class="token keyword">is</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment"># False —— 集合</span>

<span class="token comment"># 对象指向一致时，才是 True❗</span>
a <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
b <span class="token operator">=</span> a
<span class="token keyword">print</span><span class="token punctuation">(</span>a <span class="token keyword">is</span> b<span class="token punctuation">)</span> <span class="token comment"># True</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="数据类型" tabindex="-1"><a class="header-anchor" href="#数据类型" aria-hidden="true">#</a> 数据类型</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># &lt;class &#39;NoneType&#39;&gt;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># &lt;class &#39;bool&#39;&gt;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># &lt;class &#39;int&#39;&gt;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span><span class="token number">1.1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># &lt;class &#39;float&#39;&gt;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># &lt;class &#39;str&#39;&gt;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># &lt;class &#39;tuple&#39;&gt;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># &lt;class &#39;set&#39;&gt;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># &lt;class &#39;dict&#39;&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="数据类型转换" tabindex="-1"><a class="header-anchor" href="#数据类型转换" aria-hidden="true">#</a> 数据类型转换</h4><p>由于不同的数据类型之间时不能进行运算的，所以我们需要数据类型的转换。</p><p>数据类型转换有两种：</p><ol><li>自动类型转换 —— Python 在计算中会自动按不同类型的数据转换为同类型的数据（根据优先级）后再进行运算 —— 不推荐！会出现奇奇怪怪的问题；</li><li>强制类型转换 —— 开发者显式地进行数据转换 —— 推荐！诸多开发规范甚至要求在相应场景进行强制类型转换；</li></ol><h5 id="自动类型转换" tabindex="-1"><a class="header-anchor" href="#自动类型转换" aria-hidden="true">#</a> 自动类型转换</h5><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 精度等级： 布尔 &lt; 整型 &lt; 浮点型</span>

a <span class="token operator">=</span> <span class="token boolean">True</span>
b <span class="token operator">=</span> <span class="token number">1</span>
c <span class="token operator">=</span> <span class="token number">3.14</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>a <span class="token operator">+</span> b<span class="token punctuation">)</span> <span class="token comment"># 2</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>b <span class="token operator">+</span> c<span class="token punctuation">)</span> <span class="token comment"># 4.140000000000001 —— 不推荐！</span>

<span class="token keyword">from</span> decimal <span class="token keyword">import</span> Decimal
a <span class="token operator">=</span> Decimal<span class="token punctuation">(</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">)</span>
b <span class="token operator">=</span> Decimal<span class="token punctuation">(</span><span class="token string">&#39;3.14&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a <span class="token operator">+</span> b<span class="token punctuation">)</span> <span class="token comment"># 4.14 —— 推荐！ python 浮点数计算方式！</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="强制转换" tabindex="-1"><a class="header-anchor" href="#强制转换" aria-hidden="true">#</a> 强制转换</h5><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#########################</span>
<span class="token comment"># 字符串：</span>
<span class="token comment"># 1. 所有类型都可以转化为字符串类型</span>
<span class="token comment">#########################</span>

<span class="token comment"># str() —— 把其他类型数据转化为字符串类型</span>

<span class="token comment">#########################</span>
<span class="token comment"># 数字类型： </span>
<span class="token comment"># 1. 数字类型之间可以相互转换</span>
<span class="token comment"># 1. 只有字符串可以转换为数字类型</span>
<span class="token comment">#########################</span>

<span class="token comment"># int()</span>
<span class="token comment"># float()</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 1</span>
<span class="token comment"># print(int(&quot;1.5&quot;)) # ValueError: invalid literal for int() with base 10: &#39;1.5&#39;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span><span class="token number">1.1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 1</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span><span class="token number">1.5</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 1 —— 向下取整！不是四舍五入！不是！</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">float</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 1.0</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">float</span><span class="token punctuation">(</span><span class="token string">&quot;1.5&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">#########################</span>
<span class="token comment"># 布尔类型：</span>
<span class="token comment"># </span>
<span class="token comment"># 转换结果有如下情况：</span>
<span class="token comment"># 1. “集合”类型： 字符串、列表、元组、字典、集合</span>
<span class="token comment">#     + 内容空 --&gt; False</span>
<span class="token comment">#     + 内容非空 --&gt; True</span>
<span class="token comment"># 1. 数字类型： int、float</span>
<span class="token comment">#     + 0 --&gt; False</span>
<span class="token comment">#     + 非0 --&gt; True</span>
<span class="token comment">#########################</span>

<span class="token comment"># bool()</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">bool</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># False</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">bool</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># True</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">bool</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># False</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">bool</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># True</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">bool</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># False</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">bool</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># True</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">bool</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># False</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">bool</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;0&quot;</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># True</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">bool</span><span class="token punctuation">(</span><span class="token builtin">set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># False</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">bool</span><span class="token punctuation">(</span><span class="token builtin">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># True</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">bool</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># False</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">bool</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># True</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">bool</span><span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># False</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">bool</span><span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># True</span>

<span class="token comment">#########################</span>
<span class="token comment"># 列表类型：</span>
<span class="token comment"># 1. 数字（int、float）类型不能转换为列表❌</span>
<span class="token comment"># 1. 字符串（string）类型 —— 每个字符会被转换为列表元素</span>
<span class="token comment"># 1. 元组（tuple）类型 —— 一比一对应</span>
<span class="token comment"># 1. 字典（dict）类型 —— 保留键</span>
<span class="token comment"># 1. 集合（set）类型 —— 一比一对应，但是无序</span>
<span class="token comment">#########################</span>

<span class="token comment"># list()</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">(</span><span class="token string">&quot;1234&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># [&#39;1&#39;, &#39;2&#39;, &#39;3&#39;, &#39;4&#39;]</span>

<span class="token comment">#########################</span>
<span class="token comment"># 元组类型： 同 list() ，但无法修改</span>
<span class="token comment">#########################</span>

<span class="token comment"># tuple()</span>

<span class="token comment">#########################</span>
<span class="token comment"># 集合类型： 同 list() ，但无序</span>
<span class="token comment">#########################</span>

<span class="token comment"># set()</span>

<span class="token comment">#########################</span>
<span class="token comment"># 字典类型： </span>
<span class="token comment"># 1. 数字（int、float）类型不能转换为字典❌</span>
<span class="token comment"># 1. 字符串（string）类型不能转换为字典❌</span>
<span class="token comment"># 1. 列表（list）、元组（tuple）类型 —— [(key,val),...] 形式</span>
<span class="token comment"># 1. 集合（set）类型不能转换为字典❌</span>
<span class="token comment">#########################</span>

<span class="token comment"># dict()</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&quot;k1&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;v1&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&quot;k2&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;v2&quot;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># {&#39;k1&#39;: &#39;v1&#39;, &#39;k2&#39;: &#39;v2&#39;}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;k1&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;v1&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&quot;k2&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;v2&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># {&#39;k1&#39;: &#39;v1&#39;, &#39;k2&#39;: &#39;v2&#39;}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;k1&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;v1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&quot;k2&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;v2&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># {&#39;k1&#39;: &#39;v1&#39;, &#39;k2&#39;: &#39;v2&#39;}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>批量转换</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>s <span class="token operator">=</span> <span class="token string">&quot;1 2 3 4 5&quot;</span>
l <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">map</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">,</span> s<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="数据类型判断" tabindex="-1"><a class="header-anchor" href="#数据类型判断" aria-hidden="true">#</a> 数据类型判断</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># isinstance(对象, 对象类型)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">isinstance</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token builtin">bool</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># False</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">isinstance</span><span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token builtin">bool</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># True</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">isinstance</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># True</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">isinstance</span><span class="token punctuation">(</span><span class="token number">1.1</span><span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># False</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">isinstance</span><span class="token punctuation">(</span><span class="token number">1.1</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">,</span><span class="token builtin">float</span><span class="token punctuation">,</span><span class="token builtin">bool</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># True</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="关键字-if-elif-else-——-条件语句❗" tabindex="-1"><a class="header-anchor" href="#关键字-if-elif-else-——-条件语句❗" aria-hidden="true">#</a> 关键字： if/elif/else —— 条件语句❗</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 格式</span>
<span class="token keyword">if</span> <span class="token number">2</span><span class="token operator">&gt;</span><span class="token number">1</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>a <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;输入你的成绩：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> a<span class="token operator">&lt;</span><span class="token number">60</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;不及格！&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
  <span class="token keyword">if</span> a<span class="token operator">&gt;=</span><span class="token number">90</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;牛逼&quot;</span><span class="token punctuation">)</span>
  <span class="token keyword">elif</span> a<span class="token operator">&gt;=</span><span class="token number">80</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;棒&quot;</span><span class="token punctuation">)</span>
  <span class="token keyword">else</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;及格&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="关键字-for-——-循环❗" tabindex="-1"><a class="header-anchor" href="#关键字-for-——-循环❗" aria-hidden="true">#</a> 关键字： for —— 循环❗</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token string">&quot;123&quot;</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment"># 0 2 4 6 8</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>遍历数组</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>list_1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>list_1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> list_1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment"># 0 1</span>
<span class="token comment"># 1 2</span>
<span class="token comment"># 2 3</span>
<span class="token comment"># 3 4</span>

<span class="token comment"># enumerate 美剧</span>
list_1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span>
<span class="token keyword">for</span> i<span class="token punctuation">,</span>v <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>list_1<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>v<span class="token punctuation">)</span>
<span class="token comment"># 0 1</span>
<span class="token comment"># 1 2</span>
<span class="token comment"># 2 3</span>
<span class="token comment"># 3 4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>遍历字典</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>d <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;oracle&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;age&quot;</span><span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">,</span>
  <span class="token string">&quot;skill&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token string">&quot;python&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;java&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token triple-quoted-string string">&#39;&#39;&#39;
name oracle
age 18
skill (&#39;python&#39;, &#39;java&#39;)
&#39;&#39;&#39;</span>
<span class="token keyword">for</span> k <span class="token keyword">in</span> d<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> d<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token triple-quoted-string string">&quot;&quot;&quot;
(&#39;name&#39;, &#39;oracle&#39;)
(&#39;age&#39;, 18)
(&#39;skill&#39;, (&#39;python&#39;, &#39;java&#39;))
&quot;&quot;&quot;</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> d<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="关键字-while-——-循环❗" tabindex="-1"><a class="header-anchor" href="#关键字-while-——-循环❗" aria-hidden="true">#</a> 关键字： while —— 循环❗</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>i <span class="token operator">=</span> <span class="token number">1</span>
<span class="token keyword">while</span> i<span class="token operator">&lt;</span><span class="token number">100</span><span class="token punctuation">:</span>
    i <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="关键字-break-continue" tabindex="-1"><a class="header-anchor" href="#关键字-break-continue" aria-hidden="true">#</a> 关键字： break/continue</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token string">&quot;python&quot;</span><span class="token punctuation">:</span>
  <span class="token keyword">if</span> i <span class="token operator">==</span> <span class="token string">&quot;t&quot;</span><span class="token punctuation">:</span>
    <span class="token keyword">break</span>
  <span class="token keyword">elif</span> i <span class="token operator">==</span> <span class="token string">&quot;n&quot;</span><span class="token punctuation">:</span>
    <span class="token keyword">continue</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;当前的字符：&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="关键字-pass" tabindex="-1"><a class="header-anchor" href="#关键字-pass" aria-hidden="true">#</a> 关键字： pass</h4><p>空语句，用于一些语法上需要做什么，但程序不需要做做什么的场景。 使用 pass 保持程序结构的完整性。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">abc</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">&quot;hel&quot;</span><span class="token punctuation">,</span> <span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">pass</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="函数-function" tabindex="-1"><a class="header-anchor" href="#函数-function" aria-hidden="true">#</a> 函数（Function）</h4><p>关键字： def</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">say</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;hello world!&quot;</span><span class="token punctuation">)</span>

say<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># hello world!</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>参数定义</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 默认参数</span>
<span class="token keyword">def</span> <span class="token function">abc</span><span class="token punctuation">(</span>a<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>b<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>c<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token operator">+</span>b<span class="token operator">+</span>c<span class="token punctuation">)</span>
abc<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 6</span>
abc<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token comment"># 105</span>
abc<span class="token punctuation">(</span>b<span class="token operator">=</span><span class="token number">200</span><span class="token punctuation">)</span> <span class="token comment"># 204</span>

<span class="token comment"># 可变参数 —— 元组 args</span>
<span class="token keyword">def</span> <span class="token function">abc</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span><span class="token operator">*</span>b<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span>
abc<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment"># 1 ()</span>
abc<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token comment"># 1 (2, 3)</span>

<span class="token comment"># 可变参数 —— 字典 kwargs</span>
<span class="token keyword">def</span> <span class="token function">abc</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token operator">**</span>b<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span>
abc<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment"># 1 {}</span>
abc<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>x<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>y<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token comment"># 1 {&#39;x&#39;: 2, &#39;y&#39;: 3}</span>

<span class="token comment"># 变量名参数 —— * 号后的参数值必须通过变量名传入</span>
<span class="token keyword">def</span> <span class="token function">abc</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token operator">+</span>b<span class="token operator">+</span>c<span class="token punctuation">)</span>
<span class="token comment"># abc(1) # TypeError: abc() missing 2 required keyword-only arguments: &#39;b&#39; and &#39;c&#39;</span>
<span class="token comment"># abc(1,2,3) # TypeError: abc() takes 1 positional argument but 3 were given</span>
abc<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>b<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>c<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token comment"># 6</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>参数拆包</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">abc</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">)</span>
abc<span class="token punctuation">(</span><span class="token operator">*</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">)</span> <span class="token comment"># 1 2 3</span>
abc<span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># 1 2 3</span>
<span class="token comment"># 字典key❗</span>
abc<span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">{</span>
    <span class="token string">&quot;a&quot;</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token string">&quot;b&quot;</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">,</span>
    <span class="token string">&quot;c&quot;</span><span class="token punctuation">:</span><span class="token number">3</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment"># a b c</span>
<span class="token comment"># 字典value❗</span>
abc<span class="token punctuation">(</span><span class="token operator">**</span><span class="token punctuation">{</span>
    <span class="token string">&quot;a&quot;</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token string">&quot;b&quot;</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">,</span>
    <span class="token string">&quot;c&quot;</span><span class="token punctuation">:</span><span class="token number">3</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment"># 1 2 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>返回值：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">abc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">pass</span> <span class="token comment"># 默认返回 None</span>
<span class="token keyword">def</span> <span class="token function">abc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">return</span> <span class="token number">1</span> <span class="token comment"># 指定返回值</span>
<span class="token keyword">def</span> <span class="token function">abc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span> <span class="token comment"># 返回元组</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="内置函数" tabindex="-1"><a class="header-anchor" href="#内置函数" aria-hidden="true">#</a> 内置函数</h5><p>查看内置函数</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> builtins
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">dir</span><span class="token punctuation">(</span>builtins<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># [&#39;ArithmeticError&#39;, &#39;AssertionError&#39;, &#39;AttributeError&#39;, &#39;BaseException&#39;, &#39;BaseExceptionGroup&#39;, &#39;BlockingIOError&#39;, &#39;BrokenPipeError&#39;, &#39;BufferError&#39;, &#39;BytesWarning&#39;, &#39;ChildProcessError&#39;, &#39;ConnectionAbortedError&#39;, &#39;ConnectionError&#39;, &#39;ConnectionRefusedError&#39;, &#39;ConnectionResetError&#39;, &#39;DeprecationWarning&#39;, &#39;EOFError&#39;, &#39;Ellipsis&#39;, &#39;EncodingWarning&#39;, &#39;EnvironmentError&#39;, &#39;Exception&#39;, &#39;ExceptionGroup&#39;, &#39;False&#39;, &#39;FileExistsError&#39;, &#39;FileNotFoundError&#39;, &#39;FloatingPointError&#39;, &#39;FutureWarning&#39;, &#39;GeneratorExit&#39;, &#39;IOError&#39;, &#39;ImportError&#39;, &#39;ImportWarning&#39;, &#39;IndentationError&#39;, &#39;IndexError&#39;, &#39;InterruptedError&#39;, &#39;IsADirectoryError&#39;, &#39;KeyError&#39;, &#39;KeyboardInterrupt&#39;, &#39;LookupError&#39;, &#39;MemoryError&#39;, &#39;ModuleNotFoundError&#39;, &#39;NameError&#39;, &#39;None&#39;, &#39;NotADirectoryError&#39;, &#39;NotImplemented&#39;, &#39;NotImplementedError&#39;, &#39;OSError&#39;, &#39;OverflowError&#39;, &#39;PendingDeprecationWarning&#39;, &#39;PermissionError&#39;, &#39;ProcessLookupError&#39;, &#39;RecursionError&#39;, &#39;ReferenceError&#39;, &#39;ResourceWarning&#39;, &#39;RuntimeError&#39;, &#39;RuntimeWarning&#39;, &#39;StopAsyncIteration&#39;, &#39;StopIteration&#39;, &#39;SyntaxError&#39;, &#39;SyntaxWarning&#39;, &#39;SystemError&#39;, &#39;SystemExit&#39;, &#39;TabError&#39;, &#39;TimeoutError&#39;, &#39;True&#39;, &#39;TypeError&#39;, &#39;UnboundLocalError&#39;, &#39;UnicodeDecodeError&#39;, &#39;UnicodeEncodeError&#39;, &#39;UnicodeError&#39;, &#39;UnicodeTranslateError&#39;, &#39;UnicodeWarning&#39;, &#39;UserWarning&#39;, &#39;ValueError&#39;, &#39;Warning&#39;, &#39;WindowsError&#39;, &#39;ZeroDivisionError&#39;, &#39;__build_class__&#39;, &#39;__debug__&#39;, &#39;__doc__&#39;, &#39;__import__&#39;, &#39;__loader__&#39;, &#39;__name__&#39;, &#39;__package__&#39;, &#39;__spec__&#39;, &#39;abs&#39;, &#39;aiter&#39;, &#39;all&#39;, &#39;anext&#39;, &#39;any&#39;, &#39;ascii&#39;, &#39;bin&#39;, &#39;bool&#39;, &#39;breakpoint&#39;, &#39;bytearray&#39;, &#39;bytes&#39;, &#39;callable&#39;, &#39;chr&#39;, &#39;classmethod&#39;, &#39;compile&#39;, &#39;complex&#39;, &#39;copyright&#39;, &#39;credits&#39;, &#39;delattr&#39;, &#39;dict&#39;, &#39;dir&#39;, &#39;divmod&#39;, &#39;enumerate&#39;, &#39;eval&#39;, &#39;exec&#39;, &#39;exit&#39;, &#39;filter&#39;, &#39;float&#39;, &#39;format&#39;, &#39;frozenset&#39;, &#39;getattr&#39;, &#39;globals&#39;, &#39;hasattr&#39;, &#39;hash&#39;, &#39;help&#39;, &#39;hex&#39;, &#39;id&#39;, &#39;input&#39;, &#39;int&#39;, &#39;isinstance&#39;, &#39;issubclass&#39;, &#39;iter&#39;, &#39;len&#39;, &#39;license&#39;, &#39;list&#39;, &#39;locals&#39;, &#39;map&#39;, &#39;max&#39;, &#39;memoryview&#39;, &#39;min&#39;, &#39;next&#39;, &#39;object&#39;, &#39;oct&#39;, &#39;open&#39;, &#39;ord&#39;, &#39;pow&#39;, &#39;print&#39;, &#39;property&#39;, &#39;quit&#39;, &#39;range&#39;, &#39;repr&#39;, &#39;reversed&#39;, &#39;round&#39;, &#39;set&#39;, &#39;setattr&#39;, &#39;slice&#39;, &#39;sorted&#39;, &#39;staticmethod&#39;, &#39;str&#39;, &#39;sum&#39;, &#39;super&#39;, &#39;tuple&#39;, &#39;type&#39;, &#39;vars&#39;, &#39;zip&#39;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="匿名函数-lambda" tabindex="-1"><a class="header-anchor" href="#匿名函数-lambda" aria-hidden="true">#</a> 匿名函数：lambda</h5><p>语法： <code>函数名 = lambda 形参:返回值</code></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 标准形式</span>
<span class="token keyword">def</span> <span class="token function">func</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">return</span> a<span class="token operator">+</span>b
<span class="token keyword">print</span><span class="token punctuation">(</span>func<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># lambda 形式</span>
func <span class="token operator">=</span> <span class="token keyword">lambda</span> a<span class="token punctuation">,</span>b<span class="token punctuation">:</span>a<span class="token operator">+</span>b
<span class="token keyword">print</span><span class="token punctuation">(</span>func<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="关键字-try-except-as-else-finally-raise-——-异常❗" tabindex="-1"><a class="header-anchor" href="#关键字-try-except-as-else-finally-raise-——-异常❗" aria-hidden="true">#</a> 关键字： try/except/as/else/finally/raise —— 异常❗</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">try</span><span class="token punctuation">:</span>
  c <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">/</span> <span class="token number">0</span> <span class="token comment"># ZeroDivisionError: division by zero</span>
<span class="token keyword">except</span> ZeroDivisionError <span class="token keyword">as</span> e<span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;wtf!&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;ok~&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">finally</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;done.&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 万能捕获 Exception</span>
<span class="token keyword">try</span><span class="token punctuation">:</span>
  <span class="token keyword">pass</span>
<span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
  <span class="token keyword">pass</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 主动抛出异常</span>
<span class="token keyword">def</span> <span class="token function">funa</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">raise</span> Exception<span class="token punctuation">(</span><span class="token string">&quot;主动抛出一个异常&quot;</span><span class="token punctuation">)</span>
funa<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>常见异常</p><table><thead><tr><th>异常</th><th>描述</th></tr></thead><tbody><tr><td>ZeroDivisionError</td><td>0除/0取模</td></tr><tr><td>IndexError</td><td>数组越界</td></tr><tr><td>KeyError</td><td>没有key</td></tr><tr><td>NameError</td><td>没声明变量</td></tr><tr><td>SyntaxError</td><td>语法错误</td></tr><tr><td>ValueError</td><td>无效传参</td></tr></tbody></table><h5 id="traceback模块" tabindex="-1"><a class="header-anchor" href="#traceback模块" aria-hidden="true">#</a> traceback模块</h5><p>打印异常的堆栈信息</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> traceback
<span class="token keyword">try</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">/</span><span class="token number">0</span><span class="token punctuation">)</span>
<span class="token keyword">except</span><span class="token punctuation">:</span>
    traceback<span class="token punctuation">.</span>print_exc<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;hello world!&quot;</span><span class="token punctuation">)</span>

打印：
<span class="token comment"># Traceback (most recent call last):</span>
<span class="token comment">#   File &quot;***\\vuepress2-note\\code\\demo-python\\type-test.py&quot;, line 132, in &lt;module&gt;</span>
<span class="token comment">#     print(1/0)</span>
<span class="token comment">#           ~^~</span>
<span class="token comment"># ZeroDivisionError: division by zero</span>
<span class="token comment"># hello world!</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="关键字-with" tabindex="-1"><a class="header-anchor" href="#关键字-with" aria-hidden="true">#</a> 关键字： with</h4><p>with 语句可以自动管理上下文资源。 不论什么原因跳出 with 块，都能确保文件正确的关闭，以此来达到释放资源的目的。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;a.txt&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;r&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">file</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">提示</p><p>open 方法遵守了上下文管理协议，实现了 <code>__enter()</code> 方法和 <code>__exit__()</code> 方法。 进入 with 块前，会调用 <code>__enter__()</code> 方法并将返回值赋值给 <code>as</code> 后的变量。 推出 with 快后，会调用 <code>__exit__()</code> 方法释放该变量引用的资源。</p><p>上下文管理器： 遵循上下文管理器协议，实现了 <code>__enter__()</code> 方法和 <code>__exit__()</code> 方法的类对象。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 定义</span>
<span class="token keyword">class</span> <span class="token class-name">MyContextMgr</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">def</span> <span class="token function">__enter__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;__enter__&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> self
  <span class="token keyword">def</span> <span class="token function">__exit__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> exc_type<span class="token punctuation">,</span> exc_val<span class="token punctuation">,</span> exc_tb<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;__exit__&quot;</span><span class="token punctuation">,</span> exc_type<span class="token punctuation">,</span> exc_val<span class="token punctuation">,</span> exc_tb<span class="token punctuation">)</span>
  <span class="token keyword">def</span> <span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;show&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># 调用</span>
<span class="token keyword">with</span> MyContextMgr<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">file</span><span class="token punctuation">:</span>
  <span class="token builtin">file</span><span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h4 id="关键字-class-——-类❗" tabindex="-1"><a class="header-anchor" href="#关键字-class-——-类❗" aria-hidden="true">#</a> 关键字： class —— 类❗</h4><h5 id="定义类" tabindex="-1"><a class="header-anchor" href="#定义类" aria-hidden="true">#</a> 定义类</h5><p>关键字 class</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Student</span><span class="token punctuation">:</span> <span class="token comment"># 要求首字母大写！</span>
  <span class="token keyword">pass</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">提示</p><p>在 Python3 中，类定义有三种写法：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">person</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">pass</span>
<span class="token keyword">class</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">pass</span>
<span class="token keyword">class</span> <span class="token class-name">Person</span><span class="token punctuation">:</span>
  <span class="token keyword">pass</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 Python2 中，只有下面这种写法：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">pass</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></div><p>类的组成：</p><ul><li>属性</li><li>构造方法</li><li>静态方法</li><li>类方法</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Student</span><span class="token punctuation">:</span>
  name <span class="token operator">=</span> <span class="token string">&quot;小明&quot;</span>

  <span class="token comment"># 构造方法</span>
  <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> name<span class="token punctuation">,</span> age<span class="token punctuation">)</span><span class="token punctuation">:</span>
    self<span class="token punctuation">.</span>name <span class="token operator">=</span> name
    self<span class="token punctuation">.</span>age <span class="token operator">=</span> age
    self<span class="token punctuation">.</span>__xx <span class="token operator">=</span> <span class="token number">1</span> <span class="token comment"># 私有</span>

  <span class="token comment"># 构造方法/工具方法，自定义方法名 —— 方便封装为工具方法，内部编写类的工作函数调用❗</span>
  <span class="token decorator annotation punctuation">@classmethod</span>
  <span class="token keyword">def</span> <span class="token function">customInit</span><span class="token punctuation">(</span>cls<span class="token punctuation">)</span><span class="token punctuation">:</span>
    t <span class="token operator">=</span> cls<span class="token punctuation">(</span><span class="token string">&quot;custom&quot;</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">)</span>
    t<span class="token punctuation">.</span>__xx <span class="token operator">=</span> <span class="token number">2</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;custom done.&quot;</span><span class="token punctuation">)</span>
    <span class="token comment"># 调用工作函数...</span>
    <span class="token comment"># t.eat()</span>
    <span class="token keyword">return</span> t

  <span class="token comment"># 类方法</span>
  <span class="token keyword">def</span> <span class="token function">eat</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;eating...&quot;</span><span class="token punctuation">,</span>self<span class="token punctuation">.</span>__xx<span class="token punctuation">)</span>

  <span class="token comment"># 静态方法</span>
  <span class="token decorator annotation punctuation">@staticmethod</span>
  <span class="token keyword">def</span> <span class="token function">id</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;1313123123&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="创建类实例" tabindex="-1"><a class="header-anchor" href="#创建类实例" aria-hidden="true">#</a> 创建类实例</h5><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>Student<span class="token punctuation">.</span><span class="token builtin">id</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 1313123123</span>
stu <span class="token operator">=</span> Student<span class="token punctuation">(</span><span class="token string">&quot;理想&quot;</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">)</span>
cstu <span class="token operator">=</span> Student<span class="token punctuation">.</span>customInit<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># custom done.</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>stu<span class="token punctuation">,</span> cstu<span class="token punctuation">)</span> <span class="token comment"># &lt;__main__.Student object at 0x0000023D69E34EF0&gt; &lt;__main__.Student object at 0x0000023D69E34F80&gt;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">id</span><span class="token punctuation">(</span>stu<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">id</span><span class="token punctuation">(</span>cstu<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 2462792765168 2462792765312</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>stu<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token punctuation">(</span>cstu<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># &lt;class &#39;__main__.Student&#39;&gt; &lt;class &#39;__main__.Student&#39;&gt;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>stu<span class="token punctuation">.</span>age<span class="token punctuation">,</span> cstu<span class="token punctuation">.</span>age<span class="token punctuation">)</span> <span class="token comment"># 19 99</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>stu<span class="token punctuation">.</span>name<span class="token punctuation">,</span> cstu<span class="token punctuation">.</span>name<span class="token punctuation">)</span> <span class="token comment"># 理想 custom</span>
<span class="token comment"># stu.__xx # AttributeError: &#39;Student&#39; object has no attribute &#39;__xx&#39;</span>
stu<span class="token punctuation">.</span>eat<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># eating... 1</span>
cstu<span class="token punctuation">.</span>eat<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># eating... 2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="私有属性" tabindex="-1"><a class="header-anchor" href="#私有属性" aria-hidden="true">#</a> 私有属性</h5><p>通过添加 <code>__</code> 前缀声明属性私有/方法私有</p><div class="custom-container tip"><p class="custom-container-title">提示</p><p>内置函数 <code>dir()</code> 可以查看指定对象所有属性</p></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 前提：</span>
<span class="token comment"># __xx 是私有属性</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">dir</span><span class="token punctuation">(</span>stu<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># [&#39;_Student__xx&#39;, &#39;__class__&#39;, &#39;__delattr__&#39;, &#39;__dict__&#39;, &#39;__dir__&#39;, &#39;__doc__&#39;, &#39;__eq__&#39;, &#39;__format__&#39;, &#39;__ge__&#39;, &#39;__getattribute__&#39;, &#39;__getstate__&#39;, &#39;__gt__&#39;, &#39;__hash__&#39;, &#39;__init__&#39;, &#39;__init_subclass__&#39;, &#39;__le__&#39;, &#39;__lt__&#39;, &#39;__module__&#39;, &#39;__ne__&#39;, &#39;__new__&#39;, &#39;__reduce__&#39;, &#39;__reduce_ex__&#39;, &#39;__repr__&#39;, &#39;__setattr__&#39;, &#39;__sizeof__&#39;, &#39;__str__&#39;, &#39;__subclasshook__&#39;, &#39;__weakref__&#39;, &#39;age&#39;, &#39;customInit&#39;, &#39;eat&#39;, &#39;id&#39;, &#39;name&#39;]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>stu<span class="token punctuation">.</span>_Student__xx<span class="token punctuation">,</span> cstu<span class="token punctuation">.</span>_Student__xx<span class="token punctuation">)</span> <span class="token comment"># 1 2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过 <code>dir(obj)</code> 方法查看到 <code>_Student__xx</code> 是私有属性的具体名称</p><h5 id="特殊属性、特殊方法" tabindex="-1"><a class="header-anchor" href="#特殊属性、特殊方法" aria-hidden="true">#</a> 特殊属性、特殊方法</h5><p>特殊属性</p><table><thead><tr><th>名称</th><th>描述</th></tr></thead><tbody><tr><td><code>__dict__</code></td><td>获得类对象或实例对象所绑定的所有属性和方法的字典</td></tr><tr><td><code>__class__</code></td><td>对象所属的类</td></tr><tr><td><code>__bases__</code></td><td>对象所属的父类类型（列表）</td></tr><tr><td><code>__base__</code></td><td>对象所属的父类类型（第一个）</td></tr><tr><td><code>__mro__</code></td><td>对象所属的类的层次结构</td></tr><tr><td><code>__subclasses__</code></td><td>对象所属的类的子类列表</td></tr></tbody></table><p>特殊方法</p><table><thead><tr><th>名称</th><th>描述</th></tr></thead><tbody><tr><td><code>__len__()</code></td><td>长度计算</td></tr><tr><td><code>__add__()</code></td><td>加法计算</td></tr><tr><td><code>__new__()</code></td><td>用于创建对象，需要返回对象；先于 <code>__init__()</code> 被调用</td></tr><tr><td><code>__init__()</code></td><td>对创建的对象进行初始化</td></tr><tr><td><code>__del__()</code></td><td>析构函数。析构函数用于在对象被清除后清除它所占用的内存空间。删除对象时，python解析器默认会调用该方法</td></tr></tbody></table><p>创建函数 <code>__new__</code>、<code>__init__</code></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">def</span> <span class="token function">__new__</span><span class="token punctuation">(</span>cls<span class="token punctuation">,</span> <span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;__new__&quot;</span><span class="token punctuation">,</span> <span class="token builtin">id</span><span class="token punctuation">(</span>cls<span class="token punctuation">)</span><span class="token punctuation">)</span>
    obj <span class="token operator">=</span> <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__new__<span class="token punctuation">(</span>cls<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;__new__&quot;</span><span class="token punctuation">,</span> <span class="token builtin">id</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> obj
  <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> name<span class="token punctuation">,</span> age<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;__init__&quot;</span><span class="token punctuation">,</span> <span class="token builtin">id</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">)</span>
    self<span class="token punctuation">.</span>name <span class="token operator">=</span> name
    self<span class="token punctuation">.</span>age <span class="token operator">=</span> age

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;pre&quot;</span><span class="token punctuation">,</span> <span class="token builtin">id</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># pre 140710997362448</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;pre&quot;</span><span class="token punctuation">,</span> <span class="token builtin">id</span><span class="token punctuation">(</span>Person<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># pre 2558888675456</span>
<span class="token comment"># __new__ 2558888675456</span>
<span class="token comment"># __new__ 2558890830128</span>
<span class="token comment"># __init__ 2558890830128</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;post&quot;</span><span class="token punctuation">,</span> <span class="token builtin">id</span><span class="token punctuation">(</span>Person<span class="token punctuation">(</span><span class="token string">&quot;xx&quot;</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># post 2558890830128</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>析构函数 <code>__del__</code></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Person</span><span class="token punctuation">:</span>
  <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;__init__&quot;</span><span class="token punctuation">)</span>
  <span class="token keyword">def</span> <span class="token function">__del__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;__del__&quot;</span><span class="token punctuation">)</span>

p <span class="token operator">=</span> Person<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;....&quot;</span><span class="token punctuation">)</span>
p  <span class="token operator">=</span> <span class="token number">1</span> <span class="token comment"># 不再引用时 __del__</span>
<span class="token comment"># del p 也会调用 __del__</span>
p <span class="token operator">=</span> Person<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># 程序退出时 __del__</span>

<span class="token comment"># 打印</span>
<span class="token comment"># __init__</span>
<span class="token comment"># ....</span>
<span class="token comment"># __del__</span>
<span class="token comment"># __init__</span>
<span class="token comment"># __del__</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="继承" tabindex="-1"><a class="header-anchor" href="#继承" aria-hidden="true">#</a> 继承</h5><p>python 支持多继承！</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> name<span class="token punctuation">,</span> age<span class="token punctuation">)</span><span class="token punctuation">:</span>
    self<span class="token punctuation">.</span>name <span class="token operator">=</span> name
    self<span class="token punctuation">.</span>age <span class="token operator">=</span> age
  <span class="token keyword">def</span> <span class="token function">__str__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>name<span class="token punctuation">,</span> self<span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">class</span> <span class="token class-name">Student</span><span class="token punctuation">(</span>Person<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment"># 多继承： Student(A,B,C,...)</span>
  <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> name<span class="token punctuation">,</span> age<span class="token punctuation">,</span> stu_no<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span>name<span class="token punctuation">,</span> age<span class="token punctuation">)</span>
    self<span class="token punctuation">.</span>stu_no <span class="token operator">=</span> stu_no
stu_1 <span class="token operator">=</span> Student<span class="token punctuation">(</span><span class="token string">&quot;s1&quot;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>stu_1<span class="token punctuation">)</span> <span class="token comment"># (&#39;s1&#39;, 18)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">提示</p><p>object 类：</p><ol><li>object 类是所有类的父类</li><li>object 类有 <code>__str__()</code> 方法 —— java 中的 <code>toString()</code></li></ol></div><p>多继承时，如果父类有相同的属性名/方法名，则调用先继承的那个父类的东西。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">A</span><span class="token punctuation">:</span>
  <span class="token keyword">def</span> <span class="token function">xx</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;A&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">class</span> <span class="token class-name">B</span><span class="token punctuation">:</span>
  <span class="token keyword">def</span> <span class="token function">xx</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;B&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">class</span> <span class="token class-name">C</span><span class="token punctuation">(</span>A<span class="token punctuation">,</span>B<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>xx<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># A</span>
    B<span class="token punctuation">.</span>xx<span class="token punctuation">(</span>self<span class="token punctuation">)</span> <span class="token comment"># B</span>
c <span class="token operator">=</span> C<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># 输出</span>
<span class="token comment"># A</span>
<span class="token comment"># B</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="浅拷贝、深拷贝" tabindex="-1"><a class="header-anchor" href="#浅拷贝、深拷贝" aria-hidden="true">#</a> 浅拷贝、深拷贝</h5><p>概念：</p><ul><li><strong>浅拷贝</strong> —— 源对象与拷贝对象的属性值引用至同一个对象</li><li><strong>深拷贝</strong> —— 使用 copy 模块的 deepcopy 函数，递归拷贝对象中包含的对象</li></ul><p>浅拷贝</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">A</span><span class="token punctuation">:</span>
  <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">:</span>
    self<span class="token punctuation">.</span>b <span class="token operator">=</span> b
<span class="token keyword">class</span> <span class="token class-name">B</span><span class="token punctuation">:</span>
  <span class="token keyword">pass</span>

<span class="token keyword">import</span> copy

a <span class="token operator">=</span> A<span class="token punctuation">(</span>B<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
ca <span class="token operator">=</span> copy<span class="token punctuation">.</span>copy<span class="token punctuation">(</span>a<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">id</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">id</span><span class="token punctuation">(</span>ca<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">id</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>b<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">id</span><span class="token punctuation">(</span>ca<span class="token punctuation">.</span>b<span class="token punctuation">)</span><span class="token punctuation">,</span> a<span class="token punctuation">.</span>b <span class="token operator">==</span> ca<span class="token punctuation">.</span>b<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>深拷贝</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>da <span class="token operator">=</span> copy<span class="token punctuation">.</span>deepcopy<span class="token punctuation">(</span>a<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">id</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">id</span><span class="token punctuation">(</span>da<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">id</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>b<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">id</span><span class="token punctuation">(</span>da<span class="token punctuation">.</span>b<span class="token punctuation">)</span><span class="token punctuation">,</span> a<span class="token punctuation">.</span>b <span class="token operator">==</span> da<span class="token punctuation">.</span>b<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="模块-module" tabindex="-1"><a class="header-anchor" href="#模块-module" aria-hidden="true">#</a> 模块（Module）</h4><p>在 Python 中一个扩展名为 <code>.py</code> 的文件就是一个模块。一个模块中可以包含多个函数。</p><p>使用模块的好处：</p><ul><li>方便其他程序和脚本的导入并使用</li><li>避免函数名和变量名冲突</li><li>提高代码的可维护性</li><li>提高代码的可重用性</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 导入模块</span>
<span class="token keyword">import</span> 模块名
<span class="token keyword">import</span> 模块名 <span class="token keyword">as</span> 别名
<span class="token keyword">from</span> 模块名 <span class="token keyword">import</span> 函数<span class="token operator">/</span>变量<span class="token operator">/</span>类
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="常用的内置模块" tabindex="-1"><a class="header-anchor" href="#常用的内置模块" aria-hidden="true">#</a> 常用的内置模块</h5><table><thead><tr><th>模块名</th><th>描述</th></tr></thead><tbody><tr><td>sys</td><td>与 Python 解析器及其环境操作相关的标准库</td></tr><tr><td>time</td><td>提供与时间相关的各种函数的标准库</td></tr><tr><td>os</td><td>提供了访问操作系统服务功能的标准库</td></tr><tr><td>calendar</td><td>提供与日期相关的各种函数的标准库</td></tr><tr><td>urllib</td><td>提供读取来自网上（服务器）的数据标准库</td></tr><tr><td>json</td><td>提供用于使用 json 序列化和反序列化对象的标准库</td></tr><tr><td>re</td><td>提供用于在字符串中执行正则表达式匹配和替换的标准库</td></tr><tr><td>math</td><td>提供标准算术运算函数的标准库</td></tr><tr><td>decimal</td><td>提供用于进行精确控制运算精度、有效数位和四舍五入操作的十进制运算标准库</td></tr><tr><td>logging</td><td>提供了灵活的记录事件、错误、警告和调试等日志信息的功能</td></tr></tbody></table><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> sys
<span class="token keyword">print</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>getsizeof<span class="token punctuation">(</span><span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>getsizeof<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">import</span> time
<span class="token keyword">print</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>localtime<span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">import</span> urllib
<span class="token keyword">print</span><span class="token punctuation">(</span>urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span><span class="token string">&quot;http://www.baidu.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="以主程序形式运行" tabindex="-1"><a class="header-anchor" href="#以主程序形式运行" aria-hidden="true">#</a> 以主程序形式运行</h5><p>在每个模块的定义中都包括一个记录模块名称的变量 <code>__name__</code>。程序可以检查该变量，以确定他们在哪个模块中执行。 如果一个模块不是被导入到其他程序中执行的，那么它可能在解释器的顶级模块中执行。顶级模块的 <code>__name__</code> 变量的值为 <code>__main__</code>。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">add</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">return</span> a<span class="token operator">+</span>b

<span class="token keyword">if</span> __name__ <span class="token operator">=</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
  <span class="token comment"># test add() method</span>
  <span class="token keyword">pass</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="包结构" tabindex="-1"><a class="header-anchor" href="#包结构" aria-hidden="true">#</a> 包结构</h5><p>Python 中的包是一个分层次的目录结构，它将一组功能相近的模块组织在一个目录下。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>test<span class="token operator">/</span>
├── __init__<span class="token punctuation">.</span>py
├── <span class="token builtin">set</span><span class="token operator">-</span>test<span class="token punctuation">.</span>py
└── <span class="token builtin">type</span><span class="token operator">-</span>test<span class="token punctuation">.</span>py
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>作用：</p><ul><li>规范代码</li><li>避免模块名称冲突</li></ul><p>包与目录的区别： 包含 <code>__init__.py</code> 文件的目录称为 “包”</p><div class="custom-container tip"><p class="custom-container-title">提示</p><p>引入模块时，会执行 <code>__init__.py</code> 中的代码。</p></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> 包名<span class="token punctuation">.</span>模块名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h5 id="第三方模块的安装" tabindex="-1"><a class="header-anchor" href="#第三方模块的安装" aria-hidden="true">#</a> 第三方模块的安装</h5><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>pip <span class="token function">install</span> 模块名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> 模块名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>e.g.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> schedule

<span class="token keyword">def</span> <span class="token function">job</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">.</span>center<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token string">&quot;-&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

schedule<span class="token punctuation">.</span>every<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span>seconds<span class="token punctuation">.</span>do<span class="token punctuation">(</span>job<span class="token punctuation">)</span>
<span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
  schedule<span class="token punctuation">.</span>run_pending<span class="token punctuation">(</span><span class="token punctuation">)</span>
  time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,184),o=[e];function c(l,i){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","syntax.html.vue"]]);export{k as default};
