import{_ as t,r as l,o as i,c as o,a as s,b as n,d as e,e as p}from"./app-04e6f892.js";const r={},c={href:"https://www.jumpserver.org/",target:"_blank",rel:"noopener noreferrer"},d=s("br",null,null,-1),v={href:"https://github.com/jumpserver/jumpserver/",target:"_blank",rel:"noopener noreferrer"},u=p(`<h2 id="堡垒机介绍" tabindex="-1"><a class="header-anchor" href="#堡垒机介绍" aria-hidden="true">#</a> 堡垒机介绍</h2><h3 id="堡垒机运维思想" tabindex="-1"><a class="header-anchor" href="#堡垒机运维思想" aria-hidden="true">#</a> 堡垒机运维思想</h3><ul><li>事前阻止 —— 阻止危险命令的输入</li><li>实时监控 —— 事故预警</li><li>事后审计 —— 事后复盘</li><li>多用户 —— 确定命令的执行人、执行权限</li></ul><h3 id="堡垒机作用" tabindex="-1"><a class="header-anchor" href="#堡垒机作用" aria-hidden="true">#</a> 堡垒机作用</h3><p>由于跳板机的不足，企业需要一种满足角色管理、权限控制、资源访问控制操作记录和审计、系统变更和维护控制、生成资产统计报表等多需求的一体化服务机器。</p><ol><li>核心系统运维和安全审计管理</li><li>过滤和拦截非法请求访问、恶意攻击；拒绝不合法命令；进行审计口监控、报警和追踪</li><li>报警、记录、分析、处理</li></ol><h3 id="堡垒机核心功能" tabindex="-1"><a class="header-anchor" href="#堡垒机核心功能" aria-hidden="true">#</a> 堡垒机核心功能</h3><ol><li>单点登录</li><li>账号管理</li><li>身份认证</li><li>资源授权</li><li>访问控制</li><li>操作审计</li></ol><h3 id="堡垒机应用的场景" tabindex="-1"><a class="header-anchor" href="#堡垒机应用的场景" aria-hidden="true">#</a> 堡垒机应用的场景</h3><p>没有堡垒机时，存在的问题</p><ol><li>多个用户一个账号 —— 追责不明</li><li>一个用户多个账号 —— 运维人员麻烦</li><li>缺少统一的权限管理平台，难以实现高粒度的命令权限控制</li><li>对于传统网络设备无法堆运维人员的远程连接命令进行加密、审计</li></ol><h2 id="jumpserver-介绍" tabindex="-1"><a class="header-anchor" href="#jumpserver-介绍" aria-hidden="true">#</a> JumpServer 介绍</h2><h3 id="工作流程图" tabindex="-1"><a class="header-anchor" href="#工作流程图" aria-hidden="true">#</a> 工作流程图</h3><p><img src="https://s2.loli.net/2023/11/20/TfQBqAYbi7N9Ep5.png" alt="image.png"></p><h3 id="模块说明" tabindex="-1"><a class="header-anchor" href="#模块说明" aria-hidden="true">#</a> 模块说明</h3><ul><li>Lina —— 负责前端展示</li><li>Luna —— 负责网页终端前端</li><li>Core —— 后台管理平台。由 Django 开发</li><li>CoCo/KoKo —— 实现 SSH Server 和 Web Terminal Server 接口。使用 Paramiko 和 Flask 开发 | 后来使用 Golang 开发，提供更强的并发性能</li><li>Guacamole —— 提供插件/额外功能支持</li></ul><p><img src="https://s2.loli.net/2023/11/20/RcXDh21eHCyOqpa.png" alt="image.png"></p><h3 id="核心架构说明" tabindex="-1"><a class="header-anchor" href="#核心架构说明" aria-hidden="true">#</a> 核心架构说明</h3><ul><li>由 nginx 决定请求交给哪个组件处理</li></ul><p><img src="https://s2.loli.net/2023/11/20/vDFH28AZC4BJGQw.png" alt="image.png"></p><h3 id="硬件要求" tabindex="-1"><a class="header-anchor" href="#硬件要求" aria-hidden="true">#</a> 硬件要求</h3><table><thead><tr><th>项目</th><th>机器配置</th><th>操作系统</th><th>备注</th></tr></thead><tbody><tr><td>Jumpserver 服务器</td><td>4核心/16G内存/200G硬盘</td><td>CentOS/RHEL 7.x 64位系统</td><td>保证系统干净，支持 unzip 解压</td></tr></tbody></table><blockquote><p>说明：</p><ol><li><p>硬盘容量主要用于存储审计录像，所以容量的选择根据用户资产数量以及使用程度来评估，建议最好200G以上。以100台Linux虚拟机资产为例，正常使用200G可以存储5~6个月的录像。</p><p>存储空间评估标准</p><table><thead><tr><th>每小时产生录像大小（Linux和Windows平均值）</th><th>每天操作时限</th><th>保存时限</th><th>存储空间</th><th>备注</th></tr></thead><tbody><tr><td>10MB</td><td>4小时</td><td>30天</td><td>109G*10*4*30=127GB</td><td>主要是存储录像</td></tr></tbody></table></li><li><p>需要干净的操作系统，用官方DVD安装的系统可以保证安装成功。系统中不要安装docker，否则会出现冲突。</p></li></ol></blockquote><h2 id="实验环境" tabindex="-1"><a class="header-anchor" href="#实验环境" aria-hidden="true">#</a> 实验环境</h2><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>配置
2个cpu、4G内存、50G硬盘、CentOS7

依赖
python2（旧）/python3（新） —— 3.6.x
mysql server —— 5.6
mariadb（在Centos7上，mysql收费了，开源社区放出mariadb开源软件替代） —— 5.6 
redis （缓存数据库）
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>环境初始化</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>hostnamectl set-hostname teach_jumpserver

<span class="token comment"># 关闭防火墙</span>
iptables <span class="token parameter variable">-F</span>
systemctl disable firewalld 
systemctl stop firewalld

<span class="token comment"># 关闭SELinux</span>
<span class="token function">sed</span> <span class="token string">&#39;s/SELINUX=enforcing/SELINUX=disabled/g&#39;</span> /etc/selinux/config <span class="token parameter variable">-i</span>
<span class="token function">reboot</span> <span class="token comment"># 系统级别设置，重启才会生效</span>
getenforce
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>安装依赖</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 配置yum源</span>
<span class="token function">wget</span> <span class="token parameter variable">-O</span> /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-7.repo
<span class="token function">wget</span> <span class="token parameter variable">-O</span> /etc/yum.repos.d/epel.repo https://mirrors.aliyun.com/repo/epel-7.repo
yum clean all
yum makecache

<span class="token comment"># 安装系统初始化所需的软件 （如果系统是最小化安装，则需要安装这些软件）</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> bash-completion <span class="token function">vim</span> lrzsz <span class="token function">wget</span> <span class="token function">expect</span> net-tools <span class="token function">nc</span> nmap tree dos2unix <span class="token function">htop</span> iftop iotop <span class="token function">unzip</span> telnet sl psmisc nethogs glances <span class="token function">bc</span> ntpdate openldap-devel
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>安装 jumpserver</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 安装 jumpserver 所需环境</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> <span class="token function">git</span> python-pip gcc automake autoconf python-devel <span class="token function">vim</span> sshpass lrzsz readline-devel

<span class="token comment"># 修改系统的字符集，改为中文 （希望在 jumpserver 上显示中文，避免乱码）</span>
localedef <span class="token parameter variable">-c</span> <span class="token parameter variable">-f</span> UTF-8 <span class="token parameter variable">-i</span> zh_CN zh_CN.UTF-8
<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">LC_ALL</span></span><span class="token operator">=</span>zh_CN.UTF-8
<span class="token comment"># 写入全局配置文件，才能永久生效</span>
<span class="token builtin class-name">echo</span> <span class="token string">&#39;LANG=&quot;zh_CN.UTF-8&quot;&#39;</span> <span class="token operator">&gt;</span> /etc/locale.conf
<span class="token comment"># 检查变量值，确保值均为&quot;zh_CN.UTF-8&quot;</span>
locale
<span class="token comment">######### before</span>
<span class="token assign-left variable"><span class="token environment constant">LANG</span></span><span class="token operator">=</span>en_US.UTF-8
<span class="token assign-left variable">LC_CTYPE</span><span class="token operator">=</span><span class="token string">&quot;en_US.UTF-8&quot;</span>
<span class="token assign-left variable"><span class="token environment constant">LC_NUMERIC</span></span><span class="token operator">=</span><span class="token string">&quot;en_US.UTF-8&quot;</span>
<span class="token assign-left variable"><span class="token environment constant">LC_TIME</span></span><span class="token operator">=</span><span class="token string">&quot;en_US.UTF-8&quot;</span>
<span class="token assign-left variable">LC_COLLATE</span><span class="token operator">=</span><span class="token string">&quot;en_US.UTF-8&quot;</span>
<span class="token assign-left variable"><span class="token environment constant">LC_MONETARY</span></span><span class="token operator">=</span><span class="token string">&quot;en_US.UTF-8&quot;</span>
<span class="token assign-left variable">LC_MESSAGES</span><span class="token operator">=</span><span class="token string">&quot;en_US.UTF-8&quot;</span>
<span class="token assign-left variable"><span class="token environment constant">LC_PAPER</span></span><span class="token operator">=</span><span class="token string">&quot;en_US.UTF-8&quot;</span>
<span class="token assign-left variable"><span class="token environment constant">LC_NAME</span></span><span class="token operator">=</span><span class="token string">&quot;en_US.UTF-8&quot;</span>
<span class="token assign-left variable"><span class="token environment constant">LC_ADDRESS</span></span><span class="token operator">=</span><span class="token string">&quot;en_US.UTF-8&quot;</span>
<span class="token assign-left variable"><span class="token environment constant">LC_TELEPHONE</span></span><span class="token operator">=</span><span class="token string">&quot;en_US.UTF-8&quot;</span>
<span class="token assign-left variable"><span class="token environment constant">LC_MEASUREMENT</span></span><span class="token operator">=</span><span class="token string">&quot;en_US.UTF-8&quot;</span>
<span class="token assign-left variable"><span class="token environment constant">LC_IDENTIFICATION</span></span><span class="token operator">=</span><span class="token string">&quot;en_US.UTF-8&quot;</span>
<span class="token assign-left variable"><span class="token environment constant">LC_ALL</span></span><span class="token operator">=</span>
<span class="token comment">######### after</span>
<span class="token assign-left variable"><span class="token environment constant">LANG</span></span><span class="token operator">=</span>zh_CN.UTF-8
<span class="token assign-left variable">LC_CTYPE</span><span class="token operator">=</span><span class="token string">&quot;zh_CN.UTF-8&quot;</span>
<span class="token assign-left variable"><span class="token environment constant">LC_NUMERIC</span></span><span class="token operator">=</span><span class="token string">&quot;zh_CN.UTF-8&quot;</span>
<span class="token assign-left variable"><span class="token environment constant">LC_TIME</span></span><span class="token operator">=</span><span class="token string">&quot;zh_CN.UTF-8&quot;</span>
<span class="token assign-left variable">LC_COLLATE</span><span class="token operator">=</span><span class="token string">&quot;zh_CN.UTF-8&quot;</span>
<span class="token assign-left variable"><span class="token environment constant">LC_MONETARY</span></span><span class="token operator">=</span><span class="token string">&quot;zh_CN.UTF-8&quot;</span>
<span class="token assign-left variable">LC_MESSAGES</span><span class="token operator">=</span><span class="token string">&quot;zh_CN.UTF-8&quot;</span>
<span class="token assign-left variable"><span class="token environment constant">LC_PAPER</span></span><span class="token operator">=</span><span class="token string">&quot;zh_CN.UTF-8&quot;</span>
<span class="token assign-left variable"><span class="token environment constant">LC_NAME</span></span><span class="token operator">=</span><span class="token string">&quot;zh_CN.UTF-8&quot;</span>
<span class="token assign-left variable"><span class="token environment constant">LC_ADDRESS</span></span><span class="token operator">=</span><span class="token string">&quot;zh_CN.UTF-8&quot;</span>
<span class="token assign-left variable"><span class="token environment constant">LC_TELEPHONE</span></span><span class="token operator">=</span><span class="token string">&quot;zh_CN.UTF-8&quot;</span>
<span class="token assign-left variable"><span class="token environment constant">LC_MEASUREMENT</span></span><span class="token operator">=</span><span class="token string">&quot;zh_CN.UTF-8&quot;</span>
<span class="token assign-left variable"><span class="token environment constant">LC_IDENTIFICATION</span></span><span class="token operator">=</span><span class="token string">&quot;zh_CN.UTF-8&quot;</span>
<span class="token assign-left variable"><span class="token environment constant">LC_ALL</span></span><span class="token operator">=</span>zh_CN.UTF-8
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,31);function m(b,k){const a=l("ExternalLinkIcon");return i(),o("div",null,[s("p",null,[n("官网： "),s("a",c,[n("https://www.jumpserver.org/"),e(a)]),n(),d,n(" Github： "),s("a",v,[n("https://github.com/jumpserver/jumpserver/"),e(a)])]),u])}const g=t(r,[["render",m],["__file","index.html.vue"]]);export{g as default};
