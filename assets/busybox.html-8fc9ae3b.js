import{_ as t,r as l,o,c as p,a as n,b as s,d as a,w as c,e as r}from"./app-04e6f892.js";const d={},u=n("p",null,"参考：",-1),v={href:"https://www.cnblogs.com/iriczhao/p/15614746.html",target:"_blank",rel:"noopener noreferrer"},b={href:"https://blog.csdn.net/iriczhao/article/details/127308538",target:"_blank",rel:"noopener noreferrer"},m={href:"https://www.busybox.net/",target:"_blank",rel:"noopener noreferrer"},k=n("p",null,"Busybox 是一个开源项目，遵循GPL v2协议。 Busybox 将众多的UNIX命令集合进了一个很小的可执行程序中，可以用来替代 GNU fileutils、shellutils 等工具集。",-1),h=n("p",null,"像 ls、mv 和其他此类命令像是 Linux 的一部分，而事实是这些命令是 GNU Coreutils 软件包的一部分，并且大多数 Linux 发行版都预装了它。 GNU Coreutils几乎是各种 UNIX/Linux 命令的事实上的提供者，几乎是因为总是有替代品，而 BusyBox 就是 GNU Coreutils 的替代品之一。",-1),g=n("p",null,"BusyBox 是 GNU Coreutils 的绝佳替代品，虽然其中各种命令与相应的GNU工具相比，所能提供的选项比较少，但是对于一般的应用场景也足够了，特别是在操作系统的小尺寸很重要的情况下。如：",-1),f=n("ul",null,[n("li",null,"在嵌入式系统的设计中。"),n("li",null,"在 Docker 用户中，许多 Docker 镜像使用 BusyBox 为您提供最小镜像。")],-1),_=n("h2",{id:"代码分析-目录结构",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#代码分析-目录结构","aria-hidden":"true"},"#"),s(" 代码分析/目录结构")],-1),x=n("h2",{id:"编译笔记",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#编译笔记","aria-hidden":"true"},"#"),s(" 编译笔记")],-1),y={href:"https://blog.csdn.net/weixin_48983798/article/details/107290244",target:"_blank",rel:"noopener noreferrer"},S={href:"https://www.cnblogs.com/arnoldlu/p/14243491.html",target:"_blank",rel:"noopener noreferrer"},C={href:"https://blog.csdn.net/m0_46577050/article/details/125588421",target:"_blank",rel:"noopener noreferrer"},R={href:"https://blog.csdn.net/weixin_42963900/article/details/129171817",target:"_blank",rel:"noopener noreferrer"},L={href:"https://www.cnblogs.com/jiangzhaowei/p/12288515.html",target:"_blank",rel:"noopener noreferrer"},O={href:"https://blog.csdn.net/lusic01/article/details/78645316",target:"_blank",rel:"noopener noreferrer"},E={href:"https://blog.csdn.net/lailaiquququ11/article/details/126691913",target:"_blank",rel:"noopener noreferrer"},I={href:"https://blog.csdn.net/zmlovelx/article/details/80263030",target:"_blank",rel:"noopener noreferrer"},P={href:"https://blog.csdn.net/langzijing/article/details/78555812",target:"_blank",rel:"noopener noreferrer"},U=r(`<p>todo 安全编译增改措施</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">make</span> 
<span class="token function">make</span> <span class="token assign-left variable">V</span><span class="token operator">=</span><span class="token number">1</span> <span class="token comment"># KBUILD_VERBOSE | 调试模式，增加make命令输出日志</span>
<span class="token function">make</span> <span class="token assign-left variable">C</span><span class="token operator">=</span><span class="token number">1</span> <span class="token comment"># KBUILD_CHECKSRC | enable sparse checking</span>
<span class="token function">make</span> <span class="token assign-left variable">M</span><span class="token operator">=</span>dir <span class="token comment"># KBUILD_EXTMOD / SUBDIRS | 子目录</span>
<span class="token comment"># KBUILD_SRC is set on invocation of make in OBJ directory</span>
<span class="token comment"># KBUILD_SRC is not intended to be used by the regular user (for now)</span>
<span class="token comment"># make O=dir/to/store/output/files/ # KBUILD_OUTPUT</span>

<span class="token assign-left variable">CROSS_COMPILE</span><span class="token operator">=</span>aarch64-linux-gnu-
<span class="token comment">##################################### --&gt; 默认： CONFIG_CROSS_COMPILER_PREFIX in .config</span>
CROSS_COMPILE ?<span class="token operator">=</span>
<span class="token comment"># bbox: we may have CONFIG_CROSS_COMPILER_PREFIX in .config,</span>
<span class="token comment"># and it has not been included yet... thus using an awkward syntax.</span>
ifeq <span class="token punctuation">(</span><span class="token variable"><span class="token variable">$(</span>CROSS_COMPILE<span class="token variable">)</span></span>,<span class="token punctuation">)</span>
CROSS_COMPILE :<span class="token operator">=</span> <span class="token variable"><span class="token variable">$(</span>shell <span class="token function">grep</span> ^CONFIG_CROSS_COMPILER_PREFIX .config <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span>/dev/null<span class="token variable">)</span></span>
CROSS_COMPILE :<span class="token operator">=</span> <span class="token variable"><span class="token variable">$(</span>subst <span class="token assign-left variable">CONFIG_CROSS_COMPILER_PREFIX</span><span class="token operator">=</span>,,<span class="token punctuation">$(</span>CROSS_COMPILE<span class="token punctuation">)</span><span class="token variable">)</span></span>
CROSS_COMPILE :<span class="token operator">=</span> <span class="token variable"><span class="token variable">$(</span>subst &quot;,,<span class="token punctuation">$(</span>CROSS_COMPILE<span class="token punctuation">)</span><span class="token variable">)</span></span>
<span class="token comment">#&quot;)</span>
endif
<span class="token comment">#####################################</span>

ARCH
<span class="token comment">#####################################</span>
ifneq <span class="token punctuation">(</span><span class="token variable"><span class="token variable">$(</span>CROSS_COMPILE<span class="token variable">)</span></span>,<span class="token punctuation">)</span>
SUBARCH :<span class="token operator">=</span> <span class="token variable"><span class="token variable">$(</span>shell <span class="token builtin class-name">echo</span> <span class="token punctuation">$(</span>CROSS_COMPILE<span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token function">cut</span> -d- <span class="token parameter variable">-f1</span> <span class="token operator">|</span> <span class="token function">sed</span> <span class="token string">&#39;s:^.*/::g&#39;</span><span class="token variable">)</span></span>
<span class="token keyword">else</span>
SUBARCH :<span class="token operator">=</span> <span class="token variable"><span class="token variable">$(</span>shell <span class="token function">uname</span> <span class="token parameter variable">-m</span><span class="token variable">)</span></span>
endif
SUBARCH :<span class="token operator">=</span> <span class="token variable"><span class="token variable">$(</span>shell <span class="token builtin class-name">echo</span> <span class="token punctuation">$(</span>SUBARCH<span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token function">sed</span> <span class="token parameter variable">-e</span> s/i.86/i386/ <span class="token parameter variable">-e</span> s/sun4u/sparc64/ <span class="token punctuation">\\</span>
					 <span class="token parameter variable">-e</span> s/arm.*/arm/ <span class="token parameter variable">-e</span> s/sa110/arm/ <span class="token punctuation">\\</span>
					 <span class="token parameter variable">-e</span> s/s390x/s390/ <span class="token parameter variable">-e</span> s/parisc64/parisc/ <span class="token punctuation">\\</span>
					 <span class="token parameter variable">-e</span> s/ppc.*/powerpc/ <span class="token parameter variable">-e</span> s/mips.*/mips/ <span class="token variable">)</span></span>

ARCH ?<span class="token operator">=</span> <span class="token variable"><span class="token variable">$(</span>SUBARCH<span class="token variable">)</span></span>
<span class="token comment">#####################################</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="交叉编译" tabindex="-1"><a class="header-anchor" href="#交叉编译" aria-hidden="true">#</a> 交叉编译</h2><p>在准备编译前，可以先参考INSTALL、README以及examples目录和docs目录下的文件。获取到相关的构建说明、安装说明和一些使用的示例。</p><h3 id="ubuntu-22-04-jammy" tabindex="-1"><a class="header-anchor" href="#ubuntu-22-04-jammy" aria-hidden="true">#</a> Ubuntu 22.04 jammy</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ screenfetch
                          ./+o+-       uv01@lpc19
                  yyyyy- -yyyyyy+      OS: Ubuntu <span class="token number">22.04</span> jammy<span class="token punctuation">(</span>on the Windows Subsystem <span class="token keyword">for</span> Linux<span class="token punctuation">)</span>
               ://+//////-yyyyyyo      Kernel: x86_64 Linux <span class="token number">5.10</span>.16.3-microsoft-standard-WSL2
           .++ .:/++++++/-.+sss/<span class="token variable"><span class="token variable">\`</span>      Uptime: 5h 48m
         .:++o:  /++++++++/:--:/-      Packages: <span class="token number">571</span>
        o:+o+:++.<span class="token variable">\`</span></span><span class="token punctuation">..</span>\`\`<span class="token variable"><span class="token variable">\`</span>.-/oo+++++/     Shell: <span class="token function">bash</span> <span class="token number">5.1</span>.16
       .:+o:+o/.          <span class="token variable">\`</span></span>+sssoo+/    Disk: <span class="token number">1</span>.3T / <span class="token number">4</span>.0T <span class="token punctuation">(</span><span class="token number">32</span>%<span class="token punctuation">)</span>
  .++/+:+oo+o:<span class="token variable"><span class="token variable">\`</span>             /sssooo.   CPU: AMD Ryzen <span class="token number">7</span> 7840HS w/ Radeon 780M Graphics @ 16x <span class="token number">3</span>.793GHz
 /+++//+:<span class="token variable">\`</span></span>oo+o               /::--:.   GPU: NVIDIA GeForce RTX <span class="token number">4050</span> Laptop GPU
 <span class="token punctuation">\\</span>+/+o+++<span class="token variable"><span class="token variable">\`</span>o++o               ++////.   RAM: 322MiB / 15640MiB
  .++.o+++oo+:<span class="token variable">\`</span></span>             /dddhhh.
       .+.o+oo:.          <span class="token variable"><span class="token variable">\`</span>oddhhhh+
        <span class="token punctuation">\\</span>+.++o+o<span class="token variable">\`</span></span><span class="token variable"><span class="token variable">\`</span>-<span class="token variable">\`</span></span>\`\`<span class="token variable"><span class="token variable">\`</span>.:ohdhhhhh+
         <span class="token variable">\`</span></span>:o+++ <span class="token variable"><span class="token variable">\`</span>ohhhhhhhhyo++os:
           .o:<span class="token variable">\`</span></span>.syhhhhhhh/.oo++o<span class="token variable"><span class="token variable">\`</span>
               /osyyyyyyo++ooo+++/
                   <span class="token variable">\`</span></span>\`\`\`<span class="token variable"><span class="token variable">\`</span> +oo+++o<span class="token punctuation">\\</span>:
                          <span class="token variable">\`</span></span>oo++.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>编译环境</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt-get</span> update
<span class="token comment"># 编译工具</span>
<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token function">make</span> build-essential
<span class="token comment"># curses.h：No such file or directory</span>
<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> libncurses5-dev libncursesw5-dev
<span class="token comment"># 交叉编译：</span>
<span class="token function">sudo</span> <span class="token function">apt-get</span> gcc-arm-linux-gnueabi
<span class="token function">sudo</span> <span class="token function">apt-get</span> gcc-arm-linux-gnueabihf
<span class="token function">sudo</span> <span class="token function">apt-get</span> gcc-i686-linux-gnu
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>编译源码</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">tar</span> <span class="token parameter variable">-xf</span> busybox-1.36.1.tar.bz2
<span class="token builtin class-name">cd</span> busybox-1.36.1/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>编译目标（命令选项）</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">make</span> <span class="token builtin class-name">help</span> <span class="token comment"># 全部target</span>
<span class="token comment">######################################</span>
<span class="token function">make</span> clean <span class="token comment"># 清除构建结果</span>
<span class="token function">make</span> mrproper <span class="token comment"># 清除构建结果、安装文件、配置文件</span>
<span class="token function">make</span> menuconfig
<span class="token function">make</span> savedefconfig <span class="token comment"># todo 执行 make saveconfig 作用是通过执行.config 生成最小的 defconfig 文件；</span>
<span class="token function">make</span> olddefconfig <span class="token comment"># todo 　通过make oldconfig将刚增加的config项的.config做依赖检查重新生成新的.config文件，且新生成的.config和以前的不同是，将旧的.config重命名为.config.old文件</span>
<span class="token comment">######################################</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>生成编译配置</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">make</span> menuconfig <span class="token comment"># 使用 ARCH 参数</span>

<span class="token comment">######################################</span>
<span class="token comment"># 配置</span>
<span class="token comment">######################################</span>

<span class="token comment"># 链接</span>
Settings <span class="token operator">&gt;</span> Build static binary <span class="token punctuation">(</span>no shared libs<span class="token punctuation">)</span> <span class="token comment"># 编译使用静态链接</span>

<span class="token comment"># 安装</span>
Settings <span class="token operator">&gt;</span>  <span class="token punctuation">(</span>./_install<span class="token punctuation">)</span> Destination path <span class="token keyword">for</span> <span class="token string">&#39;make install&#39;</span> <span class="token comment"># 安装目录</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>编译、编译参数</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># -j8 启动8个线程进行编译</span>
<span class="token function">make</span> -j<span class="token variable">\${nproc}</span> <span class="token comment"># 编译</span>

<span class="token comment"># CROSS_COMPILE # 交叉编译器的路径</span>
<span class="token comment"># ARCH          # 对应的架构，这里以arm为例</span>
<span class="token function">make</span> <span class="token parameter variable">-j8</span> <span class="token assign-left variable">ARCH</span><span class="token operator">=</span>x86_64 <span class="token assign-left variable">CROSS_COMPILE</span><span class="token operator">=</span>x86_64-linux-gnu- <span class="token comment"># x86_64</span>
<span class="token function">make</span> <span class="token parameter variable">-j8</span> <span class="token assign-left variable">ARCH</span><span class="token operator">=</span>arm64 <span class="token assign-left variable">CROSS_COMPILE</span><span class="token operator">=</span>aarch64-linux-gnu- <span class="token comment"># arm64</span>
<span class="token function">make</span> <span class="token parameter variable">-j8</span> <span class="token assign-left variable">ARCH</span><span class="token operator">=</span>arm <span class="token assign-left variable">CROSS_COMPILE</span><span class="token operator">=</span>arm-linux-gnueabi- <span class="token comment"># armv8l/arm32</span>
<span class="token function">make</span> <span class="token parameter variable">-j8</span> <span class="token assign-left variable">ARCH</span><span class="token operator">=</span>i686 <span class="token assign-left variable">CROSS_COMPILE</span><span class="token operator">=</span>i686-linux-gnu- <span class="token comment"># i686</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">提示</p><p>不同 cpu 架构交叉编译后的文件格式如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">file</span> busybox

<span class="token comment"># armv8l</span>
ELF <span class="token number">32</span>-bit LSB executable, ARM, EABI5 version <span class="token number">1</span> <span class="token punctuation">(</span>SYSV<span class="token punctuation">)</span>, statically linked, stripped
<span class="token comment"># aarch64</span>
ELF <span class="token number">64</span>-bit LSB executable, ARM aarch64, version <span class="token number">1</span> <span class="token punctuation">(</span>SYSV<span class="token punctuation">)</span>, statically linked, <span class="token keyword">for</span> GNU/Linux <span class="token number">3.7</span>.0,BuildID<span class="token punctuation">[</span>sha1<span class="token punctuation">]</span><span class="token operator">=</span>a54574822995b2e2a267e52e731f214f844d931b, stripped
<span class="token comment"># i686</span>
ELF <span class="token number">32</span>-bit LSB executable, Intel <span class="token number">80386</span>, version <span class="token number">1</span> <span class="token punctuation">(</span>SYSV<span class="token punctuation">)</span>, statically linked, stripped
<span class="token comment"># x86_64</span>
ELF <span class="token number">64</span>-bit LSB executable, x86-64, EABI5 version <span class="token number">1</span> <span class="token punctuation">(</span>SYSV<span class="token punctuation">)</span>, statically linked, stripped
ELF <span class="token number">64</span>-bit LSB executable, x86-64, version <span class="token number">1</span> <span class="token punctuation">(</span>GNU/Linux<span class="token punctuation">)</span>, statically linked, BuildID<span class="token punctuation">[</span>sha1<span class="token punctuation">]</span><span class="token operator">=</span>b09604e98d0991efee238212a2811192087b88c3, <span class="token keyword">for</span> GNU/Linux <span class="token number">3.2</span>.0, stripped
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>安装</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">make</span> <span class="token function">install</span> <span class="token comment"># 安装</span>

<span class="token comment"># 默认安装在 ./_install/</span>
./_install/bin/busybox <span class="token comment"># 查看全部命令</span>
./_install/bin/busybox <span class="token builtin class-name">echo</span> <span class="token number">123</span>
./_install/bin/busybox <span class="token function">sh</span>

<span class="token function">file</span> busybox <span class="token comment"># 查看文件编译架构</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fedora-linux-39-workstation-edition" tabindex="-1"><a class="header-anchor" href="#fedora-linux-39-workstation-edition" aria-hidden="true">#</a> Fedora Linux 39 (Workstation Edition)</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">uname</span> <span class="token parameter variable">-a</span>
Linux fedora <span class="token number">6.5</span>.6-300.fc39.x86_64 <span class="token comment">#1 SMP PREEMPT_DYNAMIC Fri Oct  6 19:57:21 UTC 2023 x86_64 GNU/Linux</span>
$ <span class="token function">cat</span> /etc/os-release
<span class="token assign-left variable">NAME</span><span class="token operator">=</span><span class="token string">&quot;Fedora Linux&quot;</span>
<span class="token assign-left variable">VERSION</span><span class="token operator">=</span><span class="token string">&quot;39 (Workstation Edition)&quot;</span>
<span class="token assign-left variable">ID</span><span class="token operator">=</span>fedora
<span class="token assign-left variable">VERSION_ID</span><span class="token operator">=</span><span class="token number">39</span>
<span class="token assign-left variable">VERSION_CODENAME</span><span class="token operator">=</span><span class="token string">&quot;&quot;</span>
<span class="token assign-left variable">PLATFORM_ID</span><span class="token operator">=</span><span class="token string">&quot;platform:f39&quot;</span>
<span class="token assign-left variable">PRETTY_NAME</span><span class="token operator">=</span><span class="token string">&quot;Fedora Linux 39 (Workstation Edition)&quot;</span>
<span class="token assign-left variable">ANSI_COLOR</span><span class="token operator">=</span><span class="token string">&quot;0;38;2;60;110;180&quot;</span>
<span class="token assign-left variable">LOGO</span><span class="token operator">=</span>fedora-logo-icon
<span class="token assign-left variable">CPE_NAME</span><span class="token operator">=</span><span class="token string">&quot;cpe:/o:fedoraproject:fedora:39&quot;</span>
<span class="token assign-left variable">DEFAULT_HOSTNAME</span><span class="token operator">=</span><span class="token string">&quot;fedora&quot;</span>
<span class="token assign-left variable">HOME_URL</span><span class="token operator">=</span><span class="token string">&quot;https://fedoraproject.org/&quot;</span>
<span class="token assign-left variable">DOCUMENTATION_URL</span><span class="token operator">=</span><span class="token string">&quot;https://docs.fedoraproject.org/en-US/fedora/f39/system-administrators-guide/&quot;</span>
<span class="token assign-left variable">SUPPORT_URL</span><span class="token operator">=</span><span class="token string">&quot;https://ask.fedoraproject.org/&quot;</span>
<span class="token assign-left variable">BUG_REPORT_URL</span><span class="token operator">=</span><span class="token string">&quot;https://bugzilla.redhat.com/&quot;</span>
<span class="token assign-left variable">REDHAT_BUGZILLA_PRODUCT</span><span class="token operator">=</span><span class="token string">&quot;Fedora&quot;</span>
<span class="token assign-left variable">REDHAT_BUGZILLA_PRODUCT_VERSION</span><span class="token operator">=</span><span class="token number">39</span>
<span class="token assign-left variable">REDHAT_SUPPORT_PRODUCT</span><span class="token operator">=</span><span class="token string">&quot;Fedora&quot;</span>
<span class="token assign-left variable">REDHAT_SUPPORT_PRODUCT_VERSION</span><span class="token operator">=</span><span class="token number">39</span>
<span class="token assign-left variable">SUPPORT_END</span><span class="token operator">=</span><span class="token number">2024</span>-05-14
<span class="token assign-left variable">VARIANT</span><span class="token operator">=</span><span class="token string">&quot;Workstation Edition&quot;</span>
<span class="token assign-left variable">VARIANT_ID</span><span class="token operator">=</span>workstation
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># yum -y install gcc gcc-c++ glibc glibc-devel pcre pcre-devel openssl openssl-devel systemd-devel zlib-devel libmcrypt-devel glibc-static ncurses-devel</span>
yum <span class="token parameter variable">-y</span> <span class="token function">install</span> <span class="token function">make</span> gcc

yum <span class="token function">install</span> <span class="token parameter variable">-y</span> binutils-aarch64-linux-gnu
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> binutils-x86_64-linux-gnu
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> binutils-arm-linux-gnu

gcc-x86_64-linux-gnu
gcc-aarch64-linux-gnu
gcc-arm-linux-gnu
<span class="token comment"># gcc-i686-linux-gnu</span>
glibc-devel.i686
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="配置运行" tabindex="-1"><a class="header-anchor" href="#配置运行" aria-hidden="true">#</a> 配置运行</h2><p>如果使用Busybox来创建根文件系统，使用起来比较方便，只需要在/dev目录下创建必要的设备节点，在/etc目录下增加一些配置文件即可，当然如果Busybox是动态链接的，那么还需要在/lib目录下包含相关的运行库文件。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>busybox <span class="token parameter variable">--list</span> <span class="token comment"># 查看支持的命令</span>

busybox <span class="token builtin class-name">echo</span> hello world 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="作为init进程" tabindex="-1"><a class="header-anchor" href="#作为init进程" aria-hidden="true">#</a> 作为init进程</h2><p>​在linux内核启动的最后阶段，会调用run_init_process()函数启动用户空间进程，对于Busybox来说，它同样将提供一个init程序，满足linux内核最后阶段的启动跳转。只要run_init_process()创建进程成功，那么此函数将不会返回了，从而从内核态进入了用户态进程。</p><p>busybox的init程序的描述源文件位于源代码下的init/init.c文件中。 核心功能的由init_main函数实现。</p><h2 id="使用-linux" tabindex="-1"><a class="header-anchor" href="#使用-linux" aria-hidden="true">#</a> 使用（linux）</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 下载</span>
$ <span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> busybox

<span class="token comment"># 使用</span>
$ busybox <span class="token function">cat</span> sample.txt

<span class="token comment"># 如果 BusyBox 未实现命令，则会引发“找不到小程序”的错误</span>
$ busybox xyz
xyz: applet not found
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="使用-docker" tabindex="-1"><a class="header-anchor" href="#使用-docker" aria-hidden="true">#</a> 使用（docker）</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">docker</span> pull busybox
$ <span class="token function">docker</span> run <span class="token parameter variable">-it</span> <span class="token parameter variable">--rm</span> busybox
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,32);function w(A,B){const e=l("ExternalLinkIcon"),i=l("RouterLink");return o(),p("div",null,[u,n("ul",null,[n("li",null,[s("cnblogs|iriczhao|busybox使用总结-01 "),n("a",v,[s("https://www.cnblogs.com/iriczhao/p/15614746.html"),a(e)])]),n("li",null,[s("CSDN|iriczhao|Busybox源码分析-01-源码目录结构和程序入口 - "),n("a",b,[s("https://blog.csdn.net/iriczhao/article/details/127308538"),a(e)])])]),n("p",null,[s("busybox官网： "),n("a",m,[s("https://www.busybox.net/"),a(e)])]),k,h,g,f,_,n("p",null,[s("参考： "),a(i,{to:"/ops/os/busybox-src.html"},{default:c(()=>[s("link")]),_:1})]),x,n("p",null,[s("todo 交叉编译工具链 "),n("a",y,[s("https://blog.csdn.net/weixin_48983798/article/details/107290244"),a(e)]),n("a",S,[s("https://www.cnblogs.com/arnoldlu/p/14243491.html"),a(e)]),n("a",C,[s("https://blog.csdn.net/m0_46577050/article/details/125588421"),a(e)])]),n("p",null,[s("todo ARCH/CROSS_COMPILE作用 "),n("a",R,[s("https://blog.csdn.net/weixin_42963900/article/details/129171817"),a(e)]),n("a",L,[s("https://www.cnblogs.com/jiangzhaowei/p/12288515.html"),a(e)])]),n("p",null,[s("todo CC/CXX/CPPFLAGS/CFLAGS/CXXFLAGS/LDFLAGS "),n("a",O,[s("https://blog.csdn.net/lusic01/article/details/78645316"),a(e)]),n("a",E,[s("https://blog.csdn.net/lailaiquququ11/article/details/126691913"),a(e)]),n("a",I,[s("https://blog.csdn.net/zmlovelx/article/details/80263030"),a(e)]),n("a",P,[s("https://blog.csdn.net/langzijing/article/details/78555812"),a(e)])]),U])}const N=t(d,[["render",w],["__file","busybox.html.vue"]]);export{N as default};
