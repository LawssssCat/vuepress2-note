import{_ as l,r as o,o as c,c as d,a as n,b as s,d as a,w as p,e}from"./app-04e6f892.js";const r={},u=e('<p>书：</p><ul><li>[ ] Python 编程 —— 从入门到实践</li><li>[ ] Python 编程快速上手 —— 让繁琐工作自动化</li><li>[ ] Python 极客项目编程</li></ul><p><img src="https://s2.loli.net/2023/11/20/c9O82XwApqsyuBb.png" alt="image.png"></p><p>待看：</p><ul><li><s>done80% 《Python 程序设计入门到实战》 by 何敏煌</s></li><li>todo 《Python 网络编程攻略》 by Dr.M.O.Faruque Sarker</li><li>doing 《Python 绝技 —— 运用 Python 成为顶级黑客》 by TJ.O&#39; Connor</li><li>todo 《完全学会 Git · Github · Git Server 的 24 堂课》 by 孙宏明</li><li>todo All Algorithms implemented in Python https://github.com/TheAlgorithms/Python</li><li>todo Python Examples https://github.com/geekcomputers/Python</li><li>todo Python 教程 https://github.com/walter201230/Python</li><li>todo pandas数据分析 <s>https://www.bilibili.com/video/BV1q2421L7XR</s> （Pandas、Seaborn、Numpy、Matplotlib四大Python数据科学必备工具）</li></ul><hr><p>官网： https://www.python.org/</p><p>在线编写Python：</p>',8),m={href:"https://www.tutorialspoint.com/codingground.htm",target:"_blank",rel:"noopener noreferrer"},v={href:"https://repl.it/languages/python3",target:"_blank",rel:"noopener noreferrer"},k=e(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ python <span class="token parameter variable">-c</span> <span class="token string">&#39;print(&quot;hello world&quot;)&#39;</span>
hello world
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,1),h={href:"https://en.wikipedia.org/wiki/List_of_Python_software",target:"_blank",rel:"noopener noreferrer"},b=n("ul",null,[n("li",null,"网站后端 —— 框架：Django；产品：Pinterest、Instagram、Disqus、BitTorrent（BT下载器）"),n("li",null,"图像处理 —— 框架：OpenCV"),n("li",null,"矩阵运算 —— 框架：NumPy"),n("li",null,"3D动画 —— Maya 的 Python Script 支持")],-1),y=n("h2",{id:"开发环境配置",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#开发环境配置","aria-hidden":"true"},"#"),s(" 开发环境配置")],-1),g=n("h3",{id:"编译-升级",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#编译-升级","aria-hidden":"true"},"#"),s(" 编译/升级")],-1),f=e(`<h4 id="问题-enable-shared" tabindex="-1"><a class="header-anchor" href="#问题-enable-shared" aria-hidden="true">#</a> 问题： --enable-shared</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>./configure <span class="token parameter variable">--prefix</span><span class="token operator">=</span>/home/steven/python-2.7 --enable-shared
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在大多数 Unix 系统上（除了 Mac OS X 之外），共享库的路径不是绝对路径。 因此，如果我们在非标准位置安装 Python，为了不和相同版本的系统 Python 产生干扰，我们需要配置非标准位置安装的 Python共享库的路径，或者通过设置运行时的环境变量， 如 <code>LD_LIBRARY_PATH</code>。</p><p>或者配置编译选项时加上 <code>LDFLAGS=-Wl,-rpath=&lt;path&gt;</code> 参数</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># LDFLAGS=-Wl,&lt;options...&gt; 链接配置</span>
<span class="token comment"># -rpath=&lt;path&gt; 运行时的动态链接库位置</span>
./configure --enable-shared <span class="token parameter variable">--prefix</span><span class="token operator">=</span>/opt/python <span class="token assign-left variable">LDFLAGS</span><span class="token operator">=</span>-Wl,-rpath<span class="token operator">=</span>/opt/python/lib
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="升级" tabindex="-1"><a class="header-anchor" href="#升级" aria-hidden="true">#</a> 升级</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># python -m ensurepip --default-pip # 安装pip</span>
pip <span class="token function">install</span> <span class="token parameter variable">--upgrade</span> python
pip <span class="token function">install</span> <span class="token parameter variable">--upgrade</span> <span class="token assign-left variable">python</span><span class="token operator">==</span><span class="token number">3</span>.x.x
pip <span class="token function">install</span> <span class="token parameter variable">--upgrade</span> <span class="token assign-left variable">python</span><span class="token operator">==</span><span class="token number">3.11</span>.4 <span class="token parameter variable">-i</span> http://mirrors.aliyun.com/pypi/simple --trusted-host mirrors.aliyun.com
python <span class="token parameter variable">--version</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 问题： 无版本</span>
$ pip <span class="token function">install</span> <span class="token parameter variable">--upgrade</span> python
Defaulting to user installation because normal site-packages is not writeable
ERROR: Could not <span class="token function">find</span> a version that satisfies the requirement python <span class="token punctuation">(</span>from versions: none<span class="token punctuation">)</span>
ERROR: No matching distribution found <span class="token keyword">for</span> python
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>或源码编译、安装、环境配置 （需要注意编译异常和编译选项风险）</p><h3 id="模块管理工具-pip" tabindex="-1"><a class="header-anchor" href="#模块管理工具-pip" aria-hidden="true">#</a> 模块管理工具 pip</h3>`,10),x=n("h3",{id:"安装-ide-pycharm",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#安装-ide-pycharm","aria-hidden":"true"},"#"),s(" 安装 IDE PyCharm")],-1),w=n("p",null,"todo ja-netfilter https://zhaiblog.cn/169.html",-1),_={href:"https://pycharm.iswbm.com/preface.html",target:"_blank",rel:"noopener noreferrer"},q=e(`<h2 id="项目环境" tabindex="-1"><a class="header-anchor" href="#项目环境" aria-hidden="true">#</a> 项目环境</h2><h3 id="虚拟环境" tabindex="-1"><a class="header-anchor" href="#虚拟环境" aria-hidden="true">#</a> 虚拟环境</h3><p>Python 有 2 和 3 两个版本，有的项目需要用 2，有的项目需要用 3。为了避免开发上的混淆，设计了 “虚拟环境（Virtual Environment）” 机制。</p><p>通过设置不同虚拟环境，可以随意切换 python 环境，且在虚拟环境中安装软件包不需要管理员权限！</p><h4 id="使用-virtualenv" tabindex="-1"><a class="header-anchor" href="#使用-virtualenv" aria-hidden="true">#</a> 使用 Virtualenv</h4><p>Python 的虚拟环境主要是放在一个文件夹中，通过特定程序来管理该文件夹的软件包以及使用的 Python 解析器版本。目前（2024年2月25日）最常用的虚拟环境管理程序是 virtualenv</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>pip <span class="token function">install</span> virtualenv
virtualenv <span class="token operator">&lt;</span>文件夹名称<span class="token operator">&gt;</span> <span class="token comment"># 创建文件夹</span>
virtualenv <span class="token parameter variable">-p</span> /usr/local/bin/python3 <span class="token operator">&lt;</span>文件夹名称<span class="token operator">&gt;</span> <span class="token comment"># 指定版本</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面命令会顺道创建文件夹，并在文件夹中创建必要的程序和数据文件。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>虚拟环境
  ├─Lib
  │  └─site-packages
  │      ├─pip
  │      └─pip-24.0.dist-info
  ├─Scripts
  └─pyvenv.cfg

$ <span class="token function">cat</span> pyvenv.cfg
home <span class="token operator">=</span> xxxxxxxxxxx<span class="token punctuation">\\</span>AppData<span class="token punctuation">\\</span>Local<span class="token punctuation">\\</span>Programs<span class="token punctuation">\\</span>Python<span class="token punctuation">\\</span>Python312
implementation <span class="token operator">=</span> CPython
version_info <span class="token operator">=</span> <span class="token number">3.12</span>.1.final.0
virtualenv <span class="token operator">=</span> <span class="token number">20.25</span>.1
include-system-site-packages <span class="token operator">=</span> <span class="token boolean">false</span>
base-prefix <span class="token operator">=</span> xxxxxxxxxxx<span class="token punctuation">\\</span>AppData<span class="token punctuation">\\</span>Local<span class="token punctuation">\\</span>Programs<span class="token punctuation">\\</span>Python<span class="token punctuation">\\</span>Python312
base-exec-prefix <span class="token operator">=</span> xxxxxxxxxxx<span class="token punctuation">\\</span>AppData<span class="token punctuation">\\</span>Local<span class="token punctuation">\\</span>Programs<span class="token punctuation">\\</span>Python<span class="token punctuation">\\</span>Python312
base-executable <span class="token operator">=</span> xxxxxxxxxxx<span class="token punctuation">\\</span>AppData<span class="token punctuation">\\</span>Local<span class="token punctuation">\\</span>Programs<span class="token punctuation">\\</span>Python<span class="token punctuation">\\</span>Python312<span class="token punctuation">\\</span>python.exe

<span class="token comment"># source pyvenv.cfg # 当前会话中激活环境</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 进入</span>
$ <span class="token builtin class-name">source</span> bin/active <span class="token comment"># for linux</span>
$ .<span class="token punctuation">\\</span>Scripts<span class="token punctuation">\\</span>activate <span class="token comment"># for windows</span>

<span class="token comment"># 退出</span>
$ deactivate
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="使用官方自带虚拟环境" tabindex="-1"><a class="header-anchor" href="#使用官方自带虚拟环境" aria-hidden="true">#</a> 使用官方自带虚拟环境</h4><p>参考：</p><ul><li>官方 - https://docs.python.org/3/library/venv.html</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>python3 <span class="token parameter variable">-m</span> venv tutorial_env
<span class="token builtin class-name">source</span> tutorial_env/bin/activate
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="语法" tabindex="-1"><a class="header-anchor" href="#语法" aria-hidden="true">#</a> 语法</h2>`,15),P=e(`<h2 id="问题" tabindex="-1"><a class="header-anchor" href="#问题" aria-hidden="true">#</a> 问题</h2><h3 id="non-ascii-character" tabindex="-1"><a class="header-anchor" href="#non-ascii-character" aria-hidden="true">#</a> Non-ASCII character</h3><p>如果使用的是 Python 2 版，运行 py 程序后可能会出现无法识别非 ASCII 字符的错误信息。</p><p>需要在 py 文件的首行加入声明：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># -*- coding: utf-8 -*-</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>e.g.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># -*- coding: utf-8 -*-</span>
<span class="token keyword">import</span> sys

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;系统信息：&quot;</span><span class="token operator">+</span>sys<span class="token punctuation">.</span>version<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="安装模块-压缩包" tabindex="-1"><a class="header-anchor" href="#安装模块-压缩包" aria-hidden="true">#</a> 安装模块（压缩包）</h2><p>参考：</p>`,9),L={href:"https://cloud.tencent.com/developer/article/1524896",target:"_blank",rel:"noopener noreferrer"},D={href:"https://developer.aliyun.com/article/1011104",target:"_blank",rel:"noopener noreferrer"},j=e(`<p>一般用 pip 安装。如果遇到不能用 pip 安装的场景，使用源码中的 setup.py 脚本安装：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>
<span class="token comment"># python setup.py develop</span>
python setup.py build
python setup.py <span class="token function">install</span> <span class="token comment"># build + install | 不会安装该包的相关依赖包</span>

<span class="token comment"># 其他辅助命令</span>
python setup.py --help-commands 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="常见模块" tabindex="-1"><a class="header-anchor" href="#常见模块" aria-hidden="true">#</a> 常见模块</h2><h3 id="文件系统" tabindex="-1"><a class="header-anchor" href="#文件系统" aria-hidden="true">#</a> 文件系统</h3><p>在 Python 中操作磁盘文件，有几个内建模块：</p><ul><li>os.system</li><li>os.path</li><li>glob</li><li>os.walk</li><li>shutil</li></ul><h4 id="模块-os-系统命令" tabindex="-1"><a class="header-anchor" href="#模块-os-系统命令" aria-hidden="true">#</a> 模块： os - 系统命令</h4><p>os 模块是 Python 内置的与操作系统功能和文件系统相关的模块。</p><h5 id="os-system-os-command" tabindex="-1"><a class="header-anchor" href="#os-system-os-command" aria-hidden="true">#</a> os.system/os.command</h5><ul><li>os.system 运行系统指令，返回执行状态值。 e.g. 0/1/2/...</li><li>os.command 运行系统指令，返回命令结果。 e.g. &quot;command not found&quot;</li></ul><div class="custom-container tip"><p class="custom-container-title">提示</p><p>该模块中的语句的执行结果通常与操作系统有关，在不同的操作系统上运行，得到的结果可能不一样。</p></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> os
os<span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">&quot;notepad&quot;</span><span class="token punctuation">)</span>
os<span class="token punctuation">.</span>startfile<span class="token punctuation">(</span><span class="token string">&quot;C:\\\\Program Files\\\\Tencent\\\\QQ\\\\Bin\\\\qq.exe&quot;</span><span class="token punctuation">)</span> <span class="token comment"># 调用可执行文件</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th>目录相关函数</th><th>说明</th></tr></thead><tbody><tr><td><code>getcwd()</code></td><td>返回当前的工作目录</td></tr><tr><td><code>listdir(path)</code></td><td></td></tr><tr><td><code>mkdir(path[,mode])</code></td><td></td></tr><tr><td><code>makedirs(path1/path2/...[,mode])</code></td><td></td></tr><tr><td><code>rmdir(path)</code></td><td></td></tr><tr><td><code>removedirs(path1/path2/...)</code></td><td></td></tr><tr><td><code>chdir(path)</code></td><td>将 path 设置为当前工作目录</td></tr><tr><td><code>abspath(path)</code></td><td></td></tr><tr><td><code>exists(path)</code></td><td></td></tr><tr><td><code>join(path, name)</code></td><td>将路径与目录或者文件名拼接起来</td></tr><tr><td><code>splitext()</code></td><td>分离文件名和扩展名</td></tr><tr><td><code>basename(path)</code></td><td>从一个路径中提取文件名</td></tr><tr><td><code>dirname(path)</code></td><td>从一个路径中提取文件路径，不包含文件名</td></tr><tr><td><code>isdir(path)</code></td><td></td></tr></tbody></table><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> os
path <span class="token operator">=</span> os<span class="token punctuation">.</span>getcwd<span class="token punctuation">(</span><span class="token punctuation">)</span>
lst <span class="token operator">=</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>path<span class="token punctuation">)</span>
<span class="token keyword">for</span> filename <span class="token keyword">in</span> lst<span class="token punctuation">:</span>
  <span class="token keyword">if</span> filename<span class="token punctuation">.</span>endwith<span class="token punctuation">(</span><span class="token string">&#39;.py&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="os-path" tabindex="-1"><a class="header-anchor" href="#os-path" aria-hidden="true">#</a> os.path</h5><table><thead><tr><th>函数</th><th>说明</th></tr></thead><tbody><tr><td>abspath</td><td></td></tr><tr><td>basename</td><td></td></tr><tr><td>dirname</td><td></td></tr><tr><td>exists</td><td></td></tr><tr><td>getsize</td><td></td></tr><tr><td>isabs</td><td></td></tr><tr><td>isfile</td><td></td></tr><tr><td>isdir</td><td></td></tr><tr><td>split</td><td></td></tr><tr><td>splitdrive</td><td></td></tr><tr><td>join</td><td></td></tr></tbody></table><p>另外，在 Python 中有内置属性 <code>__file__</code> 代表当前所在的程序文件名。通过 <code>os.path.abspath(__file__)</code> 可以获得文件所在的目录位置。（💣但是这个属性在python的交互程序中是没有的❗）</p><h5 id="os-walk" tabindex="-1"><a class="header-anchor" href="#os-walk" aria-hidden="true">#</a> os.walk</h5><p>遍历目录，参考 tree</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> os
sample_tree <span class="token operator">=</span> os<span class="token punctuation">.</span>walk<span class="token punctuation">(</span><span class="token string">&quot;sampletree&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> dirname<span class="token punctuation">,</span> subdir<span class="token punctuation">,</span> files <span class="token keyword">in</span> sample_tree<span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span>dirname<span class="token punctuation">)</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span>subdir<span class="token punctuation">)</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span>files<span class="token punctuation">)</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># sampletree</span>
<span class="token comment"># [&#39;a&#39;, &#39;b&#39;]</span>
<span class="token comment"># [&#39;f1&#39;,&#39;f2&#39;]</span>
<span class="token comment">#</span>
<span class="token comment"># sampletree/a</span>
<span class="token comment"># []</span>
<span class="token comment"># []</span>
<span class="token comment">#</span>
<span class="token comment"># sampletree/b</span>
<span class="token comment"># []</span>
<span class="token comment"># [&#39;f1&#39;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 列出当前目录下所有文件</span>
<span class="token keyword">for</span> dirname<span class="token punctuation">,</span> subdir<span class="token punctuation">,</span> files <span class="token keyword">in</span> os<span class="token punctuation">.</span>walk<span class="token punctuation">(</span><span class="token string">&quot;./&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">for</span> filename <span class="token keyword">in</span> files<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>abspath<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>dirname<span class="token punctuation">,</span> filename<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="模块-glob-文件列表" tabindex="-1"><a class="header-anchor" href="#模块-glob-文件列表" aria-hidden="true">#</a> 模块： glob - 文件列表</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> glob
files <span class="token operator">=</span> glob<span class="token punctuation">.</span>glob<span class="token punctuation">(</span>path<span class="token punctuation">)</span> <span class="token comment"># 获取路径列表</span>
<span class="token keyword">for</span> f <span class="token keyword">in</span> files<span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="模块-shutil-文件操作" tabindex="-1"><a class="header-anchor" href="#模块-shutil-文件操作" aria-hidden="true">#</a> 模块： shutil - 文件操作</h4><table><thead><tr><th>函数</th><th>说明</th></tr></thead><tbody><tr><td><code>copyfile(s,d)</code></td><td>复制s到d，不包含属性</td></tr><tr><td><code>copy(s,d)</code></td><td>复制s到d，包含文件权限属性</td></tr><tr><td><code>copy2(s,d)</code></td><td>复制s到d，包含所有文件属性</td></tr><tr><td><code>copytree(s,d)</code></td><td></td></tr><tr><td><code>rmtree(p)</code></td><td></td></tr><tr><td><code>move(s,d)</code></td><td></td></tr></tbody></table><h4 id="模块-io流-文件读写" tabindex="-1"><a class="header-anchor" href="#模块-io流-文件读写" aria-hidden="true">#</a> 模块： IO流 - 文件读写</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># file = open(filename, [, mode, encoding])</span>

<span class="token builtin">file</span> <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;a.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token builtin">file</span><span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># write/read</span>

src_file <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;logo.png&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;rb&quot;</span><span class="token punctuation">)</span>
tar_file <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;copylogo.png&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;wb&quot;</span><span class="token punctuation">)</span>
tar_file<span class="token punctuation">.</span>write<span class="token punctuation">(</span>src_file<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
tar_file<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
src_file<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">提示</p><p>文件类型： 按文件中数据的组织形式，文件分为两大类：</p><ol><li>文本文件 —— 存储的是普通 “字符” 文本，默认为 unicode 字符集。</li><li>二进制文件 —— 把数据内容用 “字节” 进行存储，无法用笔记本打开，如：mp3、jpg、doc、...</li></ol></div><table><thead><tr><th>文件打开模式</th><th>描述</th></tr></thead><tbody><tr><td>r</td><td>以只读模式打开文件。文件的指针将会放在文件的开头。</td></tr><tr><td>w</td><td>以只写模式打开文件。如果文件不存在则创建；如果文件存在则覆盖原有内容，文件指针在文件的开头。</td></tr><tr><td>a</td><td>以追加模式打开文件。如果文件不存在则创建，文件指针在文件开头；如果文件存在则在文件末尾追加内容，文件指针在原文件末尾。</td></tr><tr><td>b</td><td>以二进制方式打开文件。不能单独使用，需要与其他模式一起使用，如：<code>rb</code>、<code>wb</code>、...</td></tr><tr><td>+</td><td>以读写方式打开文件。不能单独使用，需要与其他模式一起使用，如：<code>a+</code></td></tr></tbody></table><table><thead><tr><th>文件对象的常用方法</th><th>说明</th></tr></thead><tbody><tr><td><code>read([size])</code></td><td></td></tr><tr><td><code>readline()</code></td><td></td></tr><tr><td><code>readlines()</code></td><td></td></tr><tr><td><code>write(str)</code></td><td></td></tr><tr><td><code>writelines(s_list)</code></td><td></td></tr><tr><td><code>seek(offset[,whence])</code></td><td>把文件指针移到最新的位置。<br> offset 表示相对于 whence 的位置。<br><br> whence 不同值代表的不同含义： <ul><li>0: 从文件头开始计算（默认） </li><li>1: 从当前位置开始计算</li><li>2: 从文件尾开始计算</li></ul></td></tr><tr><td><code>tell()</code></td><td>返回文件指针的当前位置</td></tr><tr><td><code>flush()</code></td><td>把缓冲区的内容写入文件，但不关闭文件</td></tr><tr><td><code>close()</code></td><td>把缓冲区的内容写入文件，且关闭文件，释放文件对象相关资源</td></tr></tbody></table><h2 id="项目打包" tabindex="-1"><a class="header-anchor" href="#项目打包" aria-hidden="true">#</a> 项目打包</h2><p>参考：</p>`,32),z={href:"https://zhuanlan.zhihu.com/p/276461821",target:"_blank",rel:"noopener noreferrer"},A=n("li",null,"todo <>https://zhuanlan.zhihu.com/p/128020789",-1),S=e(`<p>Python 项目打包工具很成熟。如 disutils、 distutils 、distutils2、setuptools等等。 下面介绍他们的关系。</p><h3 id="distutils-包分发的始祖" tabindex="-1"><a class="header-anchor" href="#distutils-包分发的始祖" aria-hidden="true">#</a> distutils （包分发的始祖）</h3><p>distutils 是 Python 的一个标准库，从命名上很容易看出它是一个分发（distribute）工具（utlis）。 它是 Python 官方开发的一个分发打包工具，所有后续的打包工具，全部都是基于它进行开发的。</p><p>distutils 的精髓在于编写 setup.py，它是模块分发与安装的指导文件。 比如下面这条命令就是用它来进行模块的安装： <code>python setup.py install</code>。 （这样的安装方法是通过源码安装，与之对应的是通过二进制软件包的安装。）</p><h3 id="setuptools-distribute" tabindex="-1"><a class="header-anchor" href="#setuptools-distribute" aria-hidden="true">#</a> setuptools/distribute</h3><p>setuptools 是 distutils 增强版，不包括在标准库中，但大部分 Python 用户都会使用更先进的 setuptools 模块。</p><div class="custom-container tip"><p class="custom-container-title">提示</p><p>distribute 是 setuptools 有一个分支版本，分支的原因可能是有一部分开发者认为 setuptools 开发太慢了。 但现在，distribute 又合并回了 setuptools 中。 因此，我们可以认为它们是同一个东西。</p></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">###################</span>
<span class="token comment"># setuptools 安装 #</span>
<span class="token comment">###################</span>

<span class="token comment"># 方式一：</span>
<span class="token comment"># 下载压缩包： https://pypi.org/project/setuptools/#files</span>
<span class="token comment"># 安装： </span>
python setup.py <span class="token function">install</span>

<span class="token comment"># 方式二：通过引导程序安装</span>
<span class="token function">wget</span> http://peak.telecommunity.com/dist/ez_setup.py
python ez_setup.py

<span class="token comment">###################</span>
<span class="token comment"># setuptools 更新 #</span>
<span class="token comment">###################</span>

<span class="token comment"># 方式一：</span>
python ez_setup.py –U setuptools
<span class="token comment"># 方式二：</span>
pip <span class="token function">install</span> <span class="token parameter variable">-U</span> setuptools
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="easy-install" tabindex="-1"><a class="header-anchor" href="#easy-install" aria-hidden="true">#</a> easy_install</h4><p>文档： https://setuptools.pypa.io/en/latest/easy_install.html</p><p>安装完 setuptools 后，可以使用名叫 easy_install 的第三方管理工具。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#########</span>
<span class="token comment"># 镜像源</span>
<span class="token comment">#########</span>
<span class="token comment"># 编辑配置文件 /root/.pydistutils.cfg</span>
<span class="token punctuation">[</span>easy_install<span class="token punctuation">]</span>
index-url<span class="token operator">=</span>http://mirrors.aliyun.com/pypi/simple/
find-links<span class="token operator">=</span>http://mirrors.aliyun.com/pypi/simple/

<span class="token comment">#########</span>
<span class="token comment"># 安装</span>
<span class="token comment">#########</span>

<span class="token comment"># 通过包名，从PyPI寻找最新版本，自动下载、编译、安装</span>
$ easy_install pkg_name

<span class="token comment"># 通过包名从指定下载页寻找链接来安装或升级包</span>
$ easy_install <span class="token parameter variable">-f</span> http://pythonpaste.org/package_index.html 

<span class="token comment"># 指定线上的包地址安装</span>
$ easy_install http://example.com/path/to/MyPackage-1.2.3.tgz

<span class="token comment"># 从本地的 .egg 文件安装</span>
$ easy_install xxx.egg

<span class="token comment"># 在安装时你可以添加额外的参数</span>
<span class="token comment"># 指定安装目录：--install-dir=DIR, -d DIR</span>
<span class="token comment"># 指定用户安装：--user</span>

<span class="token comment">#########</span>
<span class="token comment"># 升级</span>
<span class="token comment">#########</span>

<span class="token comment"># 从 pypi 中搜索并升级包</span>
$ easy_install <span class="token parameter variable">--upgrade</span> pkg_name

<span class="token comment"># 指定版本进行升级</span>
$ easy_install <span class="token string">&quot;SomePackage==2.0&quot;</span>

<span class="token comment">#########</span>
<span class="token comment"># 卸载</span>
<span class="token comment">#########</span>

$ easy_install <span class="token parameter variable">-m</span> pkg_name
<span class="token comment"># 注意：这样的删除仅在 easy-install.pth 文件中删除，使 python 不能使用该模块。但实际的包还在电脑中，若要删除彻底，需要手动删除相关的 .egg 及其他文件。</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>todo https://zhuanlan.zhihu.com/p/276461821</p><h3 id="pyinstaller" tabindex="-1"><a class="header-anchor" href="#pyinstaller" aria-hidden="true">#</a> Pyinstaller</h3>`,14),I=e(`<h2 id="场景" tabindex="-1"><a class="header-anchor" href="#场景" aria-hidden="true">#</a> 场景</h2><h3 id="去重" tabindex="-1"><a class="header-anchor" href="#去重" aria-hidden="true">#</a> 去重</h3><p>方式一（低效）</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>s <span class="token operator">=</span> <span class="token string">&quot;asfj;lenlbans;fisajf;sacxzv&quot;</span>
n <span class="token operator">=</span> <span class="token string">&quot;&quot;</span> <span class="token comment"># or [] and append</span>
<span class="token keyword">for</span> t <span class="token keyword">in</span> s<span class="token punctuation">:</span>
    <span class="token keyword">if</span> t <span class="token keyword">not</span> <span class="token keyword">in</span> n<span class="token punctuation">:</span>
        n <span class="token operator">=</span> n <span class="token operator">+</span> t
<span class="token keyword">print</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>方式二：set（推荐，但是乱序）</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">set</span><span class="token punctuation">(</span><span class="token string">&quot;sdfsfsfasfsdfs&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="字符串解析" tabindex="-1"><a class="header-anchor" href="#字符串解析" aria-hidden="true">#</a> 字符串解析</h3><h4 id="array" tabindex="-1"><a class="header-anchor" href="#array" aria-hidden="true">#</a> array</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># string -&gt; array</span>
<span class="token comment"># filedata &lt;--&gt; {1: 82, 2: 22, 3: 99}</span>
<span class="token keyword">import</span> ast
ast<span class="token punctuation">.</span>literal_eval<span class="token punctuation">(</span>filedata<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="json" tabindex="-1"><a class="header-anchor" href="#json" aria-hidden="true">#</a> json</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> json<span class="token punctuation">,</span> datetime

fp <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;earthquake.json&#39;</span><span class="token punctuation">,</span> <span class="token string">&quot;r&quot;</span><span class="token punctuation">)</span>
earthquakes <span class="token operator">=</span> json<span class="token punctuation">.</span>load<span class="token punctuation">(</span>fp<span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;过去 7 天全球发生重大的地震信息：&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> eq <span class="token keyword">in</span> earthquakes<span class="token punctuation">[</span><span class="token string">&#39;features&#39;</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;地点：{}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>eq<span class="token punctuation">[</span><span class="token string">&#39;properties&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;place&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;震级：{}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>eq<span class="token punctuation">[</span><span class="token string">&#39;properties&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;mag&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  et <span class="token operator">=</span> eq<span class="token punctuation">[</span><span class="token string">&#39;properties&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;time&#39;</span><span class="token punctuation">]</span> <span class="token operator">/</span> <span class="token number">1000.0</span>
  d <span class="token operator">=</span> datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>fromtimestamp<span class="token punctuation">(</span>et<span class="token punctuation">)</span><span class="token punctuation">.</span> \\
  strftime<span class="token punctuation">(</span><span class="token string">&#39;%Y-%m-%d %H:%M:%S&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;时间：{}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="中文" tabindex="-1"><a class="header-anchor" href="#中文" aria-hidden="true">#</a> 中文</h3><p>todo 中文分词模块 jieba</p><h3 id="图像绘制" tabindex="-1"><a class="header-anchor" href="#图像绘制" aria-hidden="true">#</a> 图像绘制</h3><p>todo matplotlib, pillow</p><h3 id="日志装饰器" tabindex="-1"><a class="header-anchor" href="#日志装饰器" aria-hidden="true">#</a> 日志装饰器</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">logger</span><span class="token punctuation">(</span>func<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">def</span> <span class="token function">wrapper</span><span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;--------------&quot;</span><span class="token punctuation">)</span>
    func<span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;--------------&quot;</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> wrapper

<span class="token keyword">def</span> <span class="token function">add</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;{} + {} = {}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>x<span class="token operator">+</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span>

te <span class="token operator">=</span> logger<span class="token punctuation">(</span>add<span class="token punctuation">)</span>
te<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>

<span class="token comment"># 输出：</span>
<span class="token comment"># --------------</span>
<span class="token comment"># 1 + 1 = 2</span>
<span class="token comment"># --------------</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>语法糖 <code>@装饰器方法</code></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">logger</span><span class="token punctuation">(</span>func<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">def</span> <span class="token function">wrapper</span><span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;--------------&quot;</span><span class="token punctuation">)</span>
    func<span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;--------------&quot;</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> wrapper

<span class="token decorator annotation punctuation">@logger</span>
<span class="token keyword">def</span> <span class="token function">add</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;{} + {} = {}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>x<span class="token operator">+</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span>

add<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>

<span class="token comment"># 输出：</span>
<span class="token comment"># --------------</span>
<span class="token comment"># 1 + 1 = 2</span>
<span class="token comment"># --------------</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="数据库" tabindex="-1"><a class="header-anchor" href="#数据库" aria-hidden="true">#</a> 数据库</h3><h4 id="sqlite" tabindex="-1"><a class="header-anchor" href="#sqlite" aria-hidden="true">#</a> sqlite</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> sqlite3 

<span class="token comment"># 连</span>
conn <span class="token operator">=</span> sqlite3<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token string">&#39;scores.sqlite&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># 存</span>
conn<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">&#39;insert into student values(1, &quot;王小明&quot;);&#39;</span><span class="token punctuation">)</span>
conn<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># 取</span>
cursor <span class="token operator">=</span> conn<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">&#39;select * from student;&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> row <span class="token keyword">in</span> cursor<span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;No {}: {}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> row<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># 关</span>
conn<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="网络请求" tabindex="-1"><a class="header-anchor" href="#网络请求" aria-hidden="true">#</a> 网络请求</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> requests
www <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;http://mobile.sina.com.cn/&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>www<span class="token punctuation">.</span>text<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,24),R=e(`<h3 id="facebook-graph-api" tabindex="-1"><a class="header-anchor" href="#facebook-graph-api" aria-hidden="true">#</a> Facebook graph api</h3><p>todo</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>pip <span class="token function">install</span> facebook-sdk
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="web-框架" tabindex="-1"><a class="header-anchor" href="#web-框架" aria-hidden="true">#</a> Web 框架</h3><p>todo Django</p><p>todo 部署</p><ul><li>ngrok —— 代理本地网络到外网访问，测试用</li><li>cloud9 ide —— 云工作空间</li><li>DigitalOcean —— 云虚拟机</li><li>Heroku —— 云计算服务</li></ul>`,7);function $(C,B){const t=o("ExternalLinkIcon"),i=o("RouterLink");return c(),d("div",null,[u,n("ul",null,[n("li",null,[s("tutorialspoint —— "),n("a",m,[s("https://www.tutorialspoint.com/codingground.htm"),a(t)])]),n("li",null,[s("repl.it —— "),n("a",v,[s("https://repl.it/languages/python3"),a(t)])])]),k,n("p",null,[s("Python 生态：（完整："),n("a",h,[s("https://en.wikipedia.org/wiki/List_of_Python_software"),a(t)]),s("）")]),b,y,g,n("p",null,[a(i,{to:"/dev/python/python-build.html"},{default:p(()=>[s("link")]),_:1})]),f,n("p",null,[a(i,{to:"/dev/python/pip.html"},{default:p(()=>[s("link")]),_:1})]),x,w,n("p",null,[s("使用： "),n("a",_,[s("https://pycharm.iswbm.com/preface.html"),a(t)])]),q,n("p",null,[a(i,{to:"/dev/python/syntax.html"},{default:p(()=>[s("link")]),_:1})]),P,n("ul",null,[n("li",null,[s("todo "),n("a",L,[s("https://cloud.tencent.com/developer/article/1524896"),a(t)])]),n("li",null,[s("todo "),n("a",D,[s("https://developer.aliyun.com/article/1011104"),a(t)])])]),j,n("ul",null,[n("li",null,[s("todo 花了两天，终于把 Python 的 setup.py 给整明白了 - "),n("a",z,[s("https://zhuanlan.zhihu.com/p/276461821"),a(t)])]),A]),S,n("p",null,[a(i,{to:"/dev/python/pyinstaller.html"},{default:p(()=>[s("link")]),_:1})]),I,n("p",null,[s("爬虫 "),a(i,{to:"/dev/python/python-network.html"},{default:p(()=>[s("link")]),_:1})]),R])}const O=l(r,[["render",$],["__file","index.html.vue"]]);export{O as default};
