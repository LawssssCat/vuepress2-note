import{_ as c,r as p,o as i,c as l,a as n,b as s,d as a,f as r,e}from"./app-04e6f892.js";const u={},d=e(`<p>2023</p><h2 id="o0-术语" tabindex="-1"><a class="header-anchor" href="#o0-术语" aria-hidden="true">#</a> o0-“术语”</h2><ul><li>od outsourcing dispatch</li><li>ITO Information Technology Outsourcing</li></ul><h2 id="i1-hj-11月25日-11月30日" tabindex="-1"><a class="header-anchor" href="#i1-hj-11月25日-11月30日" aria-hidden="true">#</a> i1-hj 11月25日~11月30日</h2><h3 id="准备" tabindex="-1"><a class="header-anchor" href="#准备" aria-hidden="true">#</a> 准备</h3><p>机测</p><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>考点:
1、字符串处理:截取、遍历和字符的拼接，循环注意下标的准确
2、数组:排序和下标的使用
3、数学:考察基本的数学功底，注意有效数据筛选，保证时间复杂度和空间复杂度
4、栈:熟悉入栈、出栈基本操作，可以借助数组来辅助
5、链表:熟悉单项链表、双向链表的代码实现
在牛客网站相关练习题目，每种数据结构保证10道以上无辅助一次性通过
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>练习</p>`,8),k=n("li",null,[n("p",null,"[x] 极客时间王争《数据结构与算法之美》"),n("ul",null,[n("li",null,"[x] 基础"),n("li",null,"[ ] 实战")])],-1),m={href:"https://www.amoscloud.com/zh/ProgramingPractice/NowCoder/Adecco",target:"_blank",rel:"noopener noreferrer"},v={href:"https://www.nowcoder.com/exam/company",target:"_blank",rel:"noopener noreferrer"},h={href:"https://leetcode-cn.com/problemset/all/",target:"_blank",rel:"noopener noreferrer"},w=n("p",null,"[ ] 分类练习：",-1),b={href:"https://www.nowcoder.com/practice/649b210ef44446e3b1cd1be6fa4cab5e?tpId=37&&tqId=21258&rp=1&ru=/ta/huawei&qru=/ta/huawei/question-ranking",target:"_blank",rel:"noopener noreferrer"},f={href:"https://www.nowcoder.com/practice/637062df51674de8ba464e792d1a0ac6?tpId=37&&tqId=21319&rp=1&ru=/ta/huawei&qru=/ta/huawei/question-ranking",target:"_blank",rel:"noopener noreferrer"},g={href:"https://www.nowcoder.com/practice/f549ee08ddd84b8485a4fa9aefaf4a38?tpId=37&&tqId=21302&rp=1&ru=/ta/huawei&qru=/ta/huawei/question-ranking",target:"_blank",rel:"noopener noreferrer"},_={href:"https://www.nowcoder.com/practice/54404a78aec1435a81150f15f899417d?tpId=37&&tqId=21274&rp=1&ru=/ta/huawei&qru=/ta/huawei/question-ranking",target:"_blank",rel:"noopener noreferrer"},x={href:"https://www.nowcoder.com/practice/9a763ed59c7243bd8ab706b2da52b7fd?tpId=37&&tqId=21248&rp=1&ru=/ta/huawei&qru=/ta/huawei/question-ranking",target:"_blank",rel:"noopener noreferrer"},q={href:"https://www.nowcoder.com/practice/cf24906056f4488c9ddb132f317e03bc?tpId=37&tqId=21266&ru=/exam/oj",target:"_blank",rel:"noopener noreferrer"},y={href:"https://www.nowcoder.com/practice/c1f9561de1e240099bdb904765da9ad0?tpId=37&&tqId=21325&rp=1&ru=/ta/huawei&qru=/ta/huawei/question-ranking",target:"_blank",rel:"noopener noreferrer"},I={href:"https://www.nowcoder.com/practice/0596b6232ce74b18b60ba0367d7f2492?tpId=182&&tqId=34827&rp=1&ru=/ta/exam-all&qru=/ta/exam-all/question-ranking",target:"_blank",rel:"noopener noreferrer"},j={href:"https://www.nowcoder.com/practice/46bda7f0570a47b6b54a29a0a6ae4c27?tpId=182&&tqId=34634&rp=1&ru=/ta/exam-all&qru=/ta/exam-all/question-ranking",target:"_blank",rel:"noopener noreferrer"},z={href:"https://leetcode-cn.com/explore/learn/card/data-structure-binary-tree/4/conclusion/15/",target:"_blank",rel:"noopener noreferrer"},N={href:"https://www.nowcoder.com/practice/e3a3a1a956914d8ca5688ea47a5cf9c9?tpId=182&&tqId=34761&rp=1&ru=/ta/exam-all&qru=/ta/exam-all/question-ranking",target:"_blank",rel:"noopener noreferrer"},S={href:"https://www.nowcoder.com/practice/b178fcef3ed4448c99d7c0297312212d?tpId=182&&tqId=34365&rp=1&ru=/ta/exam-all&qru=/ta/exam-all/question-ranking",target:"_blank",rel:"noopener noreferrer"},C={href:"https://www.nowcoder.com/practice/caf35ae421194a1090c22fe223357dca?tpId=37&&tqId=21330&rp=1&ru=/ta/huawei&qru=/ta/huawei/question-ranking",target:"_blank",rel:"noopener noreferrer"},B={href:"https://www.nowcoder.com/practice/5427af99168b45f4a14aec195b28a839?tpId=182&&tqId=34439&rp=1&ru=/activity/oj&qru=/ta/exam-all/question-ranking",target:"_blank",rel:"noopener noreferrer"},D={href:"https://space.bilibili.com/70333083",target:"_blank",rel:"noopener noreferrer"},O=e(`<h3 id="上机" tabindex="-1"><a class="header-anchor" href="#上机" aria-hidden="true">#</a> 上机</h3><p>2023年11月30日 OD统一考试（C卷） 100% 95% 95% 385</p><p>两道1星题，一道2星题 —— 可以说非常简单了，但是没全部做完，确实不像话。</p><p>第一道1星题（100分）啥忘了，非常简单。</p><p>第二道1星题（100分）就是排序+字符串拼接，通过率95%。没满分是有一个测试案例死活通过不了，又看不到测试案例，烦死了。</p><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>按总分/科目分数排名
e.g.
输入：
2 &lt;--- 人数
yuwen shuxue &lt;---- 科目
xiaoming 90 90
zhangsan 1 95
shuxue &lt;--- 排名科目
输出：
zhangsan xiaoming
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>第三道2星题（200分）也算是简单的题，能想到正解思路dp，但是通过率（20%）（感冒，脑梗塞；菜）。 后面用暴力穷举<code>O(n^3)</code>有居然95%的通过率。 <br> （感谢出题人，测试案例安排的相当友善🙏）</p><details class="custom-container details"><p>答题记录：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">org<span class="token punctuation">.</span>example</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**

 19点05分
 */</span>

<span class="token comment">// 注意类名必须为 Main, 不要有任何 package xxx 信息</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;ss&quot;</span><span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span><span class="token string">&quot;ss&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">xx</span><span class="token punctuation">(</span><span class="token string">&quot;4\\n&quot;</span> <span class="token operator">+</span>
                <span class="token string">&quot;1 2 3 4&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">xx</span><span class="token punctuation">(</span><span class="token string">&quot;3\\n&quot;</span> <span class="token operator">+</span>
                <span class="token string">&quot;5 4 7&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">xx</span><span class="token punctuation">(</span><span class="token string">&quot;7\\n&quot;</span> <span class="token operator">+</span>
                <span class="token string">&quot;0 7 1 2 3 4 5&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">xx</span><span class="token punctuation">(</span><span class="token class-name">String</span> str<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Scanner</span> in <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 注意 hasNext 和 hasNextLine 的区别</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span>in<span class="token punctuation">.</span><span class="token function">hasNextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// 注意 while 处理多个 case</span>
                <span class="token comment">// int a = in.nextInt();</span>
                <span class="token comment">// int b = in.nextInt();</span>
                <span class="token comment">// System.out.println(a + b);</span>
                <span class="token keyword">int</span> n <span class="token operator">=</span> in<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>
                <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> in<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token function">dfs</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">,</span> <span class="token keyword">int</span> istart<span class="token punctuation">,</span> <span class="token keyword">int</span> iend<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// if(iend-istart&lt;3) return 0;</span>
        <span class="token comment">// if(iend-istart==3) {</span>
        <span class="token comment">//     for() {</span>

        <span class="token comment">//     }</span>
        <span class="token comment">// }</span>
        <span class="token comment">// --------------------------------------------------</span>
        <span class="token keyword">int</span> count <span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>arr<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span> j<span class="token operator">&lt;</span>arr<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> k<span class="token operator">=</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span> k<span class="token operator">&lt;</span>arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">&lt;</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">&lt;</span>arr<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        count <span class="token operator">++</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">&gt;</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">&gt;</span>arr<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        count<span class="token operator">++</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> count<span class="token punctuation">;</span>
        <span class="token comment">// --------------------------------------------------</span>

        <span class="token comment">// return A(arr) + B(arr);</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 4 3 2 1</span>
    <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token class-name">A</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> temp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>arr<span class="token punctuation">.</span>length<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span>arr<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">&gt;=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span> j<span class="token operator">&lt;</span>arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">&gt;</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    count<span class="token operator">++</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            temp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> count<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token class-name">C</span><span class="token punctuation">(</span>temp<span class="token punctuation">,</span> arr<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 1 2 3 4</span>
    <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token class-name">B</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> temp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>arr<span class="token punctuation">.</span>length<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span>arr<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">&gt;=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span> j<span class="token operator">&lt;</span>arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">&lt;</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    count<span class="token operator">++</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            temp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> count<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token class-name">C</span><span class="token punctuation">(</span>temp<span class="token punctuation">,</span> arr<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token class-name">C</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> temp<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">,</span><span class="token keyword">int</span> flag<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>temp<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> x <span class="token operator">=</span> temp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> a <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>x<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>
            <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>x<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">continue</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>x<span class="token operator">==</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                count<span class="token operator">++</span><span class="token punctuation">;</span>
                <span class="token keyword">continue</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span> j<span class="token operator">&lt;</span>temp<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>   <span class="token punctuation">{</span>
                    <span class="token keyword">if</span><span class="token punctuation">(</span>temp<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">&gt;=</span><span class="token number">1</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>flag<span class="token operator">&gt;</span><span class="token number">0</span><span class="token operator">?</span>a<span class="token operator">&lt;</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">:</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">&lt;</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        count <span class="token operator">+=</span> temp<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> count<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="思考" tabindex="-1"><a class="header-anchor" href="#思考" aria-hidden="true">#</a> 思考</h3><p>2023年12月1日 后来想到如何获取测试样例 —— 通过判断输入，然后抛出异常（异常中包含输入）</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">String</span> s <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">while</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span><span class="token function">hasNextLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  s <span class="token operator">=</span> in<span class="token punctuation">.</span><span class="token function">nextLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\\n&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>arr<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">&quot;my:&quot;</span><span class="token operator">+</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>或者对两个算法输出值对比，不一样则抛出异常</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">int</span> a <span class="token operator">=</span> 穷举<span class="token punctuation">(</span>xx<span class="token punctuation">)</span>
<span class="token keyword">int</span> b <span class="token operator">=</span> 优化解法<span class="token punctuation">(</span>xx<span class="token punctuation">)</span>
<span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token operator">==</span>b<span class="token punctuation">)</span> <span class="token keyword">return</span> a<span class="token punctuation">;</span>
<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">&quot;输入：&quot;</span><span class="token operator">+</span>input<span class="token operator">+</span><span class="token string">&quot;\\n输出（期望）：&quot;</span><span class="token operator">+</span>a<span class="token operator">+</span><span class="token string">&quot;\\n输出（实际）：&quot;</span><span class="token operator">+</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="i2-zc-12月1日" tabindex="-1"><a class="header-anchor" href="#i2-zc-12月1日" aria-hidden="true">#</a> i2-zc 12月1日</h2><p>综测</p><p>一个性格测评。测试之前会给你一个企业文化、核心价值观之类的陈述，需要按里面的意思去答。</p>`,16),V=e(`<h2 id="i3-zc-12月5日" tabindex="-1"><a class="header-anchor" href="#i3-zc-12月5日" aria-hidden="true">#</a> i3-zc 12月5日</h2><p>资格测试（hr面试）</p><p>半小时左右</p><h2 id="i4-jc2-12月7日" tabindex="-1"><a class="header-anchor" href="#i4-jc2-12月7日" aria-hidden="true">#</a> i4-jc2 12月7日</h2><p>先技术测试二面 （因为时间原因先二面。好像说一面面试官是本部门的，二面不是本部门的。）</p><p>7点开始半小时左右</p><ol><li><p>自我介绍</p></li><li><p>一道编程题（简单）</p><p>题描述：</p><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>你从供应商买材料，怎么买花钱最少，每个供应商，[每卖出一单位材料，材料单价+1]，现在你要买n个单位的材料，怎么买价格才能最低？
输入：{100, 200}, {9, 2}, {10, 3}, {10, 1}, {10, 3}
n = 4
输出：39
上述第一行表示供应商的{材料单价，材料个数}
第二行表示你总共要买4个单位的材料。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>答题： 贪心</p></li><li><p>问：</p><ol><li>堆排序 描述</li><li>redis 描述</li><li>redis 大数什么？（不记得问的什么，布隆？）</li><li>redis 键、string类型（尤其string比较大时）使用注意什么</li><li>springcloud/微服务 描述</li><li><s>描述你前端开发能做到什么程度？</s> （？）</li></ol></li></ol><h2 id="i4-jc1-12月8日" tabindex="-1"><a class="header-anchor" href="#i4-jc1-12月8日" aria-hidden="true">#</a> i4-jc1 12月8日</h2><p>技术一面</p><p>7点开始40分钟左右，面试官样子像大佬</p><ol><li>自我介绍</li><li>spring ioc 作用、例子</li><li>aop使用注解名，使用时需要定义什么</li><li>对比struct、springmvc、springboot</li><li>对比ibatis、mybatis</li><li>对比jdbc和mybatis</li><li>之前项目亮点，具体流程描述、分析、重现</li><li>docker、dockerfile、dockercompose细节 e.g. env、run 指令</li><li>情景题： 页面刷新慢怎么办？ <ol><li>如何确定后端问题</li><li>如何优化数据库查询、分表分库</li><li>数据库B+树</li></ol></li><li>编程题： 判断回文（输入int，输出boolean是否回文） （简单）</li><li>上面题目的优化 <ol><li>负数的处理</li><li>如何不转字符串获取下标字符</li><li>缺省关键字protected的作用</li></ol></li></ol><h2 id="i5-zc-12月12日" tabindex="-1"><a class="header-anchor" href="#i5-zc-12月12日" aria-hidden="true">#</a> i5-zc 12月12日</h2><p>综合面试（主管面试） 大概20分钟</p><p>主要就是一些普通问题，主管看起来挺友善的（感觉跟我上个领导气质很像，巧合？大佬的共通气质？）。我个人回答的反而有点紧张。😅</p><ol><li>自我介绍</li><li>然后挑一个项目讲讲，就介绍了我比较难的那个项目</li><li>到目前为止遇到的难点是什么</li><li>压力大如何缓解</li><li>平时有什么娱乐</li><li>未来的规划</li><li>对公司的了解</li><li>加班文化的理解 —— <s>我说high了，说“能不加班就不加班”，不知道会不会凉凉。</s></li><li>为什么接触编程；为什么写博客；</li><li>上家离职原因</li><li>你还有什么问题 —— <s>暂时没有。。</s></li></ol><p>问的有点多，大概就记得这些</p><h2 id="i6-sp-12月13日" tabindex="-1"><a class="header-anchor" href="#i6-sp-12月13日" aria-hidden="true">#</a> i6-sp 12月13日</h2><p>收到口头offer，说薪资情况。正式流程还需要审批，大概2~3天才能收到邮箱正式offer。</p><p>准备三甲体检、租房</p><blockquote><p>2023年12月14日 09点58分 昨天口头offer，今天早上刚上班就收到消息说审批通过了，正式offer今天或者明天，比想象中快~😀</p><p>2023年12月15日 收到offer~</p></blockquote><h2 id="i总结or感想" tabindex="-1"><a class="header-anchor" href="#i总结or感想" aria-hidden="true">#</a> i总结or感想</h2><p>整个流程从11月25日电话机试邀请，到12月14日正式收到offer，20天，半个月左右，算不算长？感觉还ok，或者说幸好有间隔的时间让我刷题和准备八股。当然，就流程而言，hod算是我见过的最长、最多流程的面试体验了（以至于后期家人朋友都叫我要有多几手准备😅）。</p><p>除了流程长外，感觉跟我联系的hrs、接口人都非常尽心友善，感谢、感谢🙏。</p><p>最后，下面从网络整理了些相关资料，有好的有质疑的，那就让我亲自去体验吧。可能后面断断续续会有入职/工作体验记录 for self。</p><h2 id="iother-资料整理" tabindex="-1"><a class="header-anchor" href="#iother-资料整理" aria-hidden="true">#</a> iother|资料整理</h2>`,25),A=n("p",null,"经验",-1),E={href:"https://www.nowcoder.com/discuss/353158075165122560",target:"_blank",rel:"noopener noreferrer"},L={href:"https://zhuanlan.zhihu.com/p/516446294",target:"_blank",rel:"noopener noreferrer"},P={href:"https://www.nowcoder.com/discuss/414191103039000576",target:"_blank",rel:"noopener noreferrer"},T={href:"https://blog.csdn.net/banxia_frontend/article/details/130446311",target:"_blank",rel:"noopener noreferrer"},R={href:"https://www.nowcoder.com/discuss/554359902274072576",target:"_blank",rel:"noopener noreferrer"},H={href:"https://www.nowcoder.com/feed/main/detail/348f671f8f5541bcbfd5d48b34609ae5",target:"_blank",rel:"noopener noreferrer"},M={href:"https://www.nowcoder.com/discuss/532194999023202304",target:"_blank",rel:"noopener noreferrer"},Z={href:"https://blog.csdn.net/m0_37138074/article/details/126140900",target:"_blank",rel:"noopener noreferrer"},Q={href:"https://www.zhihu.com/question/356592219/answer/1198212042",target:"_blank",rel:"noopener noreferrer"},W={href:"https://www.zhihu.com/question/393448954/answer/2301608196",target:"_blank",rel:"noopener noreferrer"},F={href:"https://zhuanlan.zhihu.com/p/639420930",target:"_blank",rel:"noopener noreferrer"},G={href:"https://www.nowcoder.com/discuss/386840436000796672",target:"_blank",rel:"noopener noreferrer"},J={href:"https://www.zhihu.com/question/346354942",target:"_blank",rel:"noopener noreferrer"},K={href:"https://www.zhihu.com/question/346354942/answer/1166810638",target:"_blank",rel:"noopener noreferrer"},U={href:"https://www.zhihu.com/question/346354942/answer/1844702818",target:"_blank",rel:"noopener noreferrer"},X={href:"https://www.zhihu.com/question/346354942/answer/1199831960",target:"_blank",rel:"noopener noreferrer"},Y={href:"https://javaguide.cn/high-quality-technical-articles/personal-experience/huawei-od-275-days.html",target:"_blank",rel:"noopener noreferrer"},$=e(`<div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>https://bbs.csdn.net/topics/360211633
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><s>区别</s></p><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>周末加班有加班费
工卡 夜宵 班车
外网的权限，内部论坛资料 ilearning
股票分红
免费宿舍/租房补贴
申请公寓/心声部门文章/公告
D1绩效2-3k D2绩效3-4k D3绩效4-5k D4绩效5-6k D5绩效7-8k
od离职没n＋1

工资等级对照表2022|&lt;https://maimai.cn/article/detail?fid=1736948890&amp;efid=B-OqWZwHHZl7krcn7VRy0Q&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>转正</p><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>基本要求：
*入职时间：一年以上
*绩效要求：连续两次绩效A —— 是一年里两次考评都排在部门前10%，能做到属于火车头
*认证要求：通过可信专业级认证
*其他条件：根据业务部门的人员需求及指标要求确定
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="w0-rz" tabindex="-1"><a class="header-anchor" href="#w0-rz" aria-hidden="true">#</a> w0-rz</h2><p>todo 入职</p><p>工作照 <!-- 白底、白衬衫、黑西装、领带 --></p><p>体检 <!-- 三甲 公务员 400报销（所在部门报销） --></p><p>填材料 <!-- 各种：身份、户籍、学历、工作经历、社保缴纳地、... --></p><p>合同</p><h2 id="w1-kx" tabindex="-1"><a class="header-anchor" href="#w1-kx" aria-hidden="true">#</a> w1-kx</h2><p>todo 可信考试</p>`,13);function nn(sn,an){const t=p("ExternalLinkIcon"),o=p("disclaimer");return i(),l("div",null,[d,n("ul",null,[k,n("li",null,[n("p",null,[s("[ ] 算法面试题 "),n("a",m,[s("https://www.amoscloud.com/zh/ProgramingPractice/NowCoder/Adecco"),a(t)])])]),n("li",null,[n("p",null,[s("[ ] 牛客网（简单、中等难度） "),n("a",v,[s("https://www.nowcoder.com/exam/company"),a(t)])])]),n("li",null,[n("p",null,[s("[ ] 力扣（简单、中等难度） "),n("a",h,[s("https://leetcode-cn.com/problemset/all/"),a(t)])])]),n("li",null,[w,n("ul",null,[n("li",null,[s("[x] 基础能力 "),n("a",b,[s("https://www.nowcoder.com/practice/649b210ef44446e3b1cd1be6fa4cab5e?tpId=37&&tqId=21258&rp=1&ru=/ta/huawei&qru=/ta/huawei/question-ranking"),a(t)])]),n("li",null,[s("[x] 字符串操作 "),n("a",f,[s("https://www.nowcoder.com/practice/637062df51674de8ba464e792d1a0ac6?tpId=37&&tqId=21319&rp=1&ru=/ta/huawei&qru=/ta/huawei/question-ranking"),a(t)])]),n("li",null,[s("[ ] "),n("s",null,[s("栈 "),n("a",g,[s("https://www.nowcoder.com/practice/f549ee08ddd84b8485a4fa9aefaf4a38?tpId=37&&tqId=21302&rp=1&ru=/ta/huawei&qru=/ta/huawei/question-ranking"),a(t)])]),s(" （没了）")]),n("li",null,[s("[x] 链表 "),n("a",_,[s("https://www.nowcoder.com/practice/54404a78aec1435a81150f15f899417d?tpId=37&&tqId=21274&rp=1&ru=/ta/huawei&qru=/ta/huawei/question-ranking"),a(t)])]),n("li",null,[s("[x] 排序 "),n("a",x,[s("https://www.nowcoder.com/practice/9a763ed59c7243bd8ab706b2da52b7fd?tpId=37&&tqId=21248&rp=1&ru=/ta/huawei&qru=/ta/huawei/question-ranking"),a(t)])]),n("li",null,[s("[x] 搜索遍历 "),n("a",q,[s("https://www.nowcoder.com/practice/cf24906056f4488c9ddb132f317e03bc?tpId=37&tqId=21266&ru=/exam/oj"),a(t)])]),n("li",null,[s("[x] 字符串 "),n("ul",null,[n("li",null,[s("[x] 字符统计 "),n("a",y,[s("https://www.nowcoder.com/practice/c1f9561de1e240099bdb904765da9ad0?tpId=37&&tqId=21325&rp=1&ru=/ta/huawei&qru=/ta/huawei/question-ranking"),a(t)])])])]),n("li",null,[s("[x] 数组 "),n("ul",null,[n("li",null,[s("[x] 合并区间 "),n("a",I,[s("https://www.nowcoder.com/practice/0596b6232ce74b18b60ba0367d7f2492?tpId=182&&tqId=34827&rp=1&ru=/ta/exam-all&qru=/ta/exam-all/question-ranking"),a(t)])])])]),n("li",null,[s("[x] 链表 "),n("ul",null,[n("li",null,[s("[x] 链表合并： "),n("a",j,[s("https://www.nowcoder.com/practice/46bda7f0570a47b6b54a29a0a6ae4c27?tpId=182&&tqId=34634&rp=1&ru=/ta/exam-all&qru=/ta/exam-all/question-ranking"),a(t)])])])]),n("li",null,[s("[x] 二叉树 "),n("ul",null,[n("li",null,[s("[x] 从中序与后序遍历序列构造二叉树 "),n("a",z,[s("https://leetcode-cn.com/explore/learn/card/data-structure-binary-tree/4/conclusion/15/"),a(t)])]),n("li",null,[s("[x] 二叉树的序列化 "),n("a",N,[s("https://www.nowcoder.com/practice/e3a3a1a956914d8ca5688ea47a5cf9c9?tpId=182&&tqId=34761&rp=1&ru=/ta/exam-all&qru=/ta/exam-all/question-ranking"),a(t)])])])]),n("li",null,[s("[x] 动态规划 "),n("ul",null,[n("li",null,[s("[x] 猴子爬山（牛客）/爬楼梯（leetcode） "),n("a",S,[s("https://www.nowcoder.com/practice/b178fcef3ed4448c99d7c0297312212d?tpId=182&&tqId=34365&rp=1&ru=/ta/exam-all&qru=/ta/exam-all/question-ranking"),a(t)])])])]),n("li",null,[s("[x] 数学题 "),n("a",C,[s("https://www.nowcoder.com/practice/caf35ae421194a1090c22fe223357dca?tpId=37&&tqId=21330&rp=1&ru=/ta/huawei&qru=/ta/huawei/question-ranking"),a(t)])]),n("li",null,[s("[x] 图 "),n("a",B,[s("https://www.nowcoder.com/practice/5427af99168b45f4a14aec195b28a839?tpId=182&&tqId=34439&rp=1&ru=/activity/oj&qru=/ta/exam-all/question-ranking"),a(t)])])])]),n("li",null,[n("p",null,[n("a",D,[s("https://space.bilibili.com/70333083"),a(t)])])])]),O,r(`

e.g. 不排斥加班

e.g. 不需要太健谈、不需要太多陌生朋友 —— 搞技术的人设？

`),V,a(o),A,n("ul",null,[n("li",null,[s("面试过程21 "),n("a",E,[s("https://www.nowcoder.com/discuss/353158075165122560"),a(t)])]),n("li",null,[s("面试过程22 "),n("a",L,[s("https://zhuanlan.zhihu.com/p/516446294"),a(t)])]),n("li",null,[s("面试过程22 "),n("a",P,[s("https://www.nowcoder.com/discuss/414191103039000576"),a(t)])]),n("li",null,[s("面试过程23 "),n("a",T,[s("https://blog.csdn.net/banxia_frontend/article/details/130446311"),a(t)])]),n("li",null,[s("面试过程23 "),n("a",R,[s("https://www.nowcoder.com/discuss/554359902274072576"),a(t)])]),n("li",null,[s("面试过程23 "),n("a",H,[s("https://www.nowcoder.com/feed/main/detail/348f671f8f5541bcbfd5d48b34609ae5"),a(t)])]),n("li",null,[s("面试过程23 "),n("a",M,[s("https://www.nowcoder.com/discuss/532194999023202304"),a(t)])]),n("li",null,[s("面试过程23(细) "),n("a",Z,[s("https://blog.csdn.net/m0_37138074/article/details/126140900"),a(t)])]),n("li",null,[s("入职体验 "),n("a",Q,[s("https://www.zhihu.com/question/356592219/answer/1198212042"),a(t)])]),n("li",null,[s("入职体验 "),n("a",W,[s("https://www.zhihu.com/question/393448954/answer/2301608196"),a(t)])]),n("li",null,[s("入职体验 "),n("a",F,[s("https://zhuanlan.zhihu.com/p/639420930"),a(t)])]),n("li",null,[s("入职体验 "),n("a",G,[s("https://www.nowcoder.com/discuss/386840436000796672"),a(t)])]),n("li",null,[s("入职体验 "),n("a",J,[s("https://www.zhihu.com/question/346354942"),a(t)]),n("ul",null,[n("li",null,[s("面试过程20 "),n("a",K,[s("https://www.zhihu.com/question/346354942/answer/1166810638"),a(t)])]),n("li",null,[s("日记 "),n("a",U,[s("https://www.zhihu.com/question/346354942/answer/1844702818"),a(t)])]),n("li",null,[s("OD介绍 "),n("a",X,[s("https://www.zhihu.com/question/346354942/answer/1199831960"),a(t)])])])]),n("li",null,[s("其他 "),n("a",Y,[s("https://javaguide.cn/high-quality-technical-articles/personal-experience/huawei-od-275-days.html"),a(t)])])]),$])}const en=c(u,[["render",nn],["__file","hod.html.vue"]]);export{en as default};
