import{_ as n,o as s,c as a,e}from"./app-04e6f892.js";const t={},p=e(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">--name</span> foo <span class="token parameter variable">--rm</span> <span class="token parameter variable">-d</span> <span class="token parameter variable">--memory</span><span class="token operator">=</span><span class="token string">&#39;512MB&#39;</span> <span class="token parameter variable">--cpus</span><span class="token operator">=</span><span class="token string">&#39;0.5&#39;</span> nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="使用dockerfile构建alpine镜像" tabindex="-1"><a class="header-anchor" href="#使用dockerfile构建alpine镜像" aria-hidden="true">#</a> 使用Dockerfile构建Alpine镜像</h2><p>参考： 《使用podman进行Dockerfile创建Alpine镜像》 https://www.cnblogs.com/nie123/p/16644467.html</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">podman</span> pull alpine
<span class="token comment"># 启动并进入容器</span>
<span class="token function">podman</span> run <span class="token parameter variable">-it</span> alpine
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 改镜像源</span>
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">&#39;s/dl-cdn.alpinelinux.org/mirrors.aliyun.com/g&#39;</span> /etc/apk/repositories 
apk update

<span class="token comment"># 用户</span>
adduser <span class="token parameter variable">-SHs</span> /sbin/nologin apache
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>todo</p><h2 id="不退出问题" tabindex="-1"><a class="header-anchor" href="#不退出问题" aria-hidden="true">#</a> 不退出问题</h2><p>参考： 《前后端分离，如何在前端项目中动态插入后端API基地址？（in docker）》 https://www.cnblogs.com/JulianHuang/p/13032240.html <br> 参考： 《nginx -g &quot;daemon off;&quot; 你学废了吗？》 https://www.cnblogs.com/JulianHuang/p/15753732.html</p><h2 id="镜像原理" tabindex="-1"><a class="header-anchor" href="#镜像原理" aria-hidden="true">#</a> 镜像原理</h2><p>参考： 《docker 如何导出某个镜像增量部分》 https://blog.csdn.net/qq_36120342/article/details/119937352 <br> 参考： 《Docker镜像解析获取Dockerfile文件》 https://cloud.tencent.com/developer/article/2328049</p><p>观察镜像内部，由多个layer组成</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">podman</span> images
REPOSITORY               TAG         IMAGE ID      CREATED       SIZE
docker.io/library/nginx  latest      a8758716bb6a  <span class="token number">2</span> months ago  <span class="token number">191</span> MB
$ <span class="token function">podman</span> <span class="token function">history</span> nginx
ID            CREATED       CREATED BY                                     SIZE        COMMENT
a8758716bb6a  <span class="token number">2</span> months ago  CMD <span class="token punctuation">[</span><span class="token string">&quot;nginx&quot;</span> <span class="token string">&quot;-g&quot;</span> <span class="token string">&quot;daemon off;&quot;</span><span class="token punctuation">]</span>               0B          buildkit.dockerfile.v0
<span class="token operator">&lt;</span>missing<span class="token operator">&gt;</span>     <span class="token number">2</span> months ago  STOPSIGNAL SIGQUIT                             0B          buildkit.dockerfile.v0
<span class="token operator">&lt;</span>missing<span class="token operator">&gt;</span>     <span class="token number">2</span> months ago  EXPOSE map<span class="token punctuation">[</span><span class="token number">80</span>/tcp:<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">]</span>                          0B          buildkit.dockerfile.v0
<span class="token operator">&lt;</span>missing<span class="token operator">&gt;</span>     <span class="token number">2</span> months ago  ENTRYPOINT <span class="token punctuation">[</span><span class="token string">&quot;/docker-entrypoint.sh&quot;</span><span class="token punctuation">]</span>           0B          buildkit.dockerfile.v0
<span class="token operator">&lt;</span>missing<span class="token operator">&gt;</span>     <span class="token number">2</span> months ago  COPY <span class="token number">30</span>-tune-worker-processes.sh /docker-e<span class="token punctuation">..</span>.  <span class="token number">7</span>.17kB      buildkit.dockerfile.v0
<span class="token operator">&lt;</span>missing<span class="token operator">&gt;</span>     <span class="token number">2</span> months ago  COPY <span class="token number">20</span>-envsubst-on-templates.sh /docker-e<span class="token punctuation">..</span>.  <span class="token number">5</span>.12kB      buildkit.dockerfile.v0
<span class="token operator">&lt;</span>missing<span class="token operator">&gt;</span>     <span class="token number">2</span> months ago  COPY <span class="token number">15</span>-local-resolvers.envsh /docker-entr<span class="token punctuation">..</span>.  <span class="token number">2</span>.56kB      buildkit.dockerfile.v0
<span class="token operator">&lt;</span>missing<span class="token operator">&gt;</span>     <span class="token number">2</span> months ago  COPY <span class="token number">10</span>-listen-on-ipv6-by-default.sh /dock<span class="token punctuation">..</span>.  <span class="token number">4</span>.61kB      buildkit.dockerfile.v0
<span class="token operator">&lt;</span>missing<span class="token operator">&gt;</span>     <span class="token number">2</span> months ago  COPY docker-entrypoint.sh / <span class="token comment"># buildkit         3.58kB      buildkit.dockerfile.v0</span>
<span class="token operator">&lt;</span>missing<span class="token operator">&gt;</span>     <span class="token number">2</span> months ago  RUN /bin/sh <span class="token parameter variable">-c</span> <span class="token builtin class-name">set</span> <span class="token parameter variable">-x</span>     <span class="token operator">&amp;&amp;</span> <span class="token function">groupadd</span> --sy<span class="token punctuation">..</span>.  113MB       buildkit.dockerfile.v0
<span class="token operator">&lt;</span>missing<span class="token operator">&gt;</span>     <span class="token number">2</span> months ago  ENV <span class="token assign-left variable">PKG_RELEASE</span><span class="token operator">=</span><span class="token number">1</span>~bookworm                     0B          buildkit.dockerfile.v0
<span class="token operator">&lt;</span>missing<span class="token operator">&gt;</span>     <span class="token number">2</span> months ago  ENV <span class="token assign-left variable">NJS_VERSION</span><span class="token operator">=</span><span class="token number">0.8</span>.2                          0B          buildkit.dockerfile.v0
<span class="token operator">&lt;</span>missing<span class="token operator">&gt;</span>     <span class="token number">2</span> months ago  ENV <span class="token assign-left variable">NGINX_VERSION</span><span class="token operator">=</span><span class="token number">1.25</span>.3                       0B          buildkit.dockerfile.v0
<span class="token operator">&lt;</span>missing<span class="token operator">&gt;</span>     <span class="token number">2</span> months ago  LABEL <span class="token assign-left variable">maintainer</span><span class="token operator">=</span>NGINX Docker Maintainers <span class="token punctuation">..</span>.  0B          buildkit.dockerfile.v0
<span class="token operator">&lt;</span>missing<span class="token operator">&gt;</span>     <span class="token number">2</span> months ago  /bin/sh <span class="token parameter variable">-c</span> <span class="token comment">#(nop)  CMD [&quot;bash&quot;]                0B</span>
<span class="token operator">&lt;</span>missing<span class="token operator">&gt;</span>     <span class="token number">2</span> months ago  /bin/sh <span class="token parameter variable">-c</span> <span class="token comment">#(nop) ADD file:9deb26e1dbc258d...  77.8MB</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中 <code>nginx -g daemon off</code> 命令用于让nginx在前台运行，而不是在后台作为守护进程运行。这样做的目的是为了让Docker能够正确地跟踪nginx的进程，因为Docker会根据容器内部的第一个进程（pid=1）来判断容器是否正在运行。如果nginx在后台运行，那么Docker会认为容器已经退出，从而终止容器。</p><p>加上 <code>--no-trunc</code> 参数可查看全部命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">podman</span> <span class="token function">history</span> nginx --no-trunc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用 <code>inspect</code> 命令来查看镜像的详细信息，通过 <code>--format</code> 参数可自行定义输出信息，获取镜像的配置信息。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">podman</span> inspect <span class="token parameter variable">--format</span><span class="token operator">=</span><span class="token string">&#39;{{json.config}}&#39;</span> nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="压缩镜像分层" tabindex="-1"><a class="header-anchor" href="#压缩镜像分层" aria-hidden="true">#</a> 压缩镜像分层</h3><p>Docker 分层 = 基础镜像分层 + Dockerfile 引入分层</p><ul><li><code>--squash</code> 压缩 Dockerfile 层为一层</li><li><code>--squash-all</code> 压缩基础镜像分层和 Dockerfile 引入分层为一层！</li></ul><h2 id="podman-pod" tabindex="-1"><a class="header-anchor" href="#podman-pod" aria-hidden="true">#</a> podman pod</h2><p>todo podman pod</p><p>参考</p><ul><li>Pod 功能介绍 - https://ithelp.ithome.com.tw/articles/10239822</li><li>Pod 与容器的区别 - https://zhuanlan.zhihu.com/p/650682331 todo <ul><li>Pod 是如何在底层实现的</li><li>Pod 和 Container 之间的实际区别是什么</li><li>如何使用 Docker 创建 Pod</li></ul></li></ul><div class="custom-container tip"><p class="custom-container-title">提示</p><p>刚开始接触 Kubernetes 时，你学到的第一件事就是每个 Pod 都有一个唯一的 IP 和主机名，并且在同一个 Pod 中，容器可以通过 localhost 相互通信。所以，显而易见，一个 Pod 就像一个微型的服务器。</p><p>但是，过段时间，你会发现 Pod 中的每个容器都有一个隔离的文件系统，并且从一个容器内部，你看不到在同一 Pod 的其他容器中运行的进程。好吧！也许 Pod 不是一个微型的服务器，而只是一组具有共享网络堆栈的容器。</p><p>但随后你会了解到，Pod 中的容器可以通过共享内存进行通信！所以，在容器之间，网络命名空间不是唯一可以共享的东西……</p></div><p>Pod 概念由 Kubernetes 引入。一个 Pod 管理多个容器，其中所有容器共享网络，可以轻松通过 localhost 相互通信，而无需设定任何额外的服务端口。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 创建Pod</span>
<span class="token function">podman</span> pod create <span class="token parameter variable">-n</span> my-app <span class="token parameter variable">-p</span> <span class="token number">8081</span>:80
<span class="token comment"># 添加容器</span>
<span class="token function">podman</span> run <span class="token parameter variable">-dt</span> <span class="token parameter variable">--pod</span> my-app <span class="token parameter variable">-v</span> /opt/http:/usr/share/nginx/html:ro --security-opt<span class="token operator">=</span><span class="token string">&quot;seccomp=unconfined&quot;</span> <span class="token parameter variable">--name</span> hello-nginx nginx
<span class="token comment"># 查看</span>
<span class="token function">podman</span> pod <span class="token function">ps</span>
<span class="token comment"># 开始/停止</span>
<span class="token function">podman</span> pod start my-app
<span class="token function">podman</span> pod stop my-app
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="podman-play" tabindex="-1"><a class="header-anchor" href="#podman-play" aria-hidden="true">#</a> podman play</h2><p>参考 https://zhuanlan.zhihu.com/p/398928004</p><p>todo podman play kube</p><p>按照 yaml 配置运行 Pod</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">podman</span> play kube ./my-app.yaml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>my-app.yaml</code></p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token comment"># my-app.yaml</span>
<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1
<span class="token key atrule">kind</span><span class="token punctuation">:</span> Pod
<span class="token key atrule">metadata</span><span class="token punctuation">:</span>
  <span class="token key atrule">name</span><span class="token punctuation">:</span> my<span class="token punctuation">-</span>app
<span class="token key atrule">spec</span><span class="token punctuation">:</span>
  <span class="token key atrule">containers</span><span class="token punctuation">:</span>
  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> ng1
    <span class="token key atrule">image</span><span class="token punctuation">:</span> nginx
    <span class="token key atrule">ports</span><span class="token punctuation">:</span>
    <span class="token comment"># nodePort       在Pod外部访问</span>
    <span class="token comment"># port           在Pod内部访问</span>
    <span class="token comment"># targetPort     是pod上的端口。从port/nodePort上来的数据，经过kube-proxy流入到后端pod的targetPort上，最后进入容器。</span>
    <span class="token comment"># containerPort  在pod控制器中定义的、pod中的容器需要暴露的端口。该端口只是起到specification作用，哪怕不在yaml中定义，也是可以通过nodePort-&gt;targetPort的流向(外部)或者port-&gt;targetPort流向(内部)进行访问。</span>
    <span class="token comment"># 更多： 《循序渐进地学习kubernetes网络》 https://zhuanlan.zhihu.com/p/563148579</span>
      <span class="token punctuation">-</span> <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">8001</span>
        <span class="token key atrule">hostPort</span><span class="token punctuation">:</span> <span class="token number">8001</span>
        <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP
    <span class="token key atrule">volumeMounts</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> html1<span class="token punctuation">-</span>volume
        <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /opt/html
      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> config1<span class="token punctuation">-</span>volume
        <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /etc/nginx/conf.d
  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> ng2
    <span class="token key atrule">image</span><span class="token punctuation">:</span> nginx
    <span class="token key atrule">ports</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">8002</span>
        <span class="token key atrule">hostPort</span><span class="token punctuation">:</span> <span class="token number">8002</span>
        <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP
    <span class="token key atrule">volumeMounts</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> html2<span class="token punctuation">-</span>volume
        <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /opt/html
      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> config2<span class="token punctuation">-</span>volume
        <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /etc/nginx/conf.d
  <span class="token key atrule">volumes</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> html1<span class="token punctuation">-</span>volume
      <span class="token key atrule">hostPath</span><span class="token punctuation">:</span>
        <span class="token key atrule">path</span><span class="token punctuation">:</span> /opt/myapp/html1
        <span class="token key atrule">type</span><span class="token punctuation">:</span> Directory
    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> config1<span class="token punctuation">-</span>volume
      <span class="token key atrule">hostPath</span><span class="token punctuation">:</span>
        <span class="token key atrule">path</span><span class="token punctuation">:</span> /opt/myapp/config1
        <span class="token key atrule">type</span><span class="token punctuation">:</span> Directory
    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> html2<span class="token punctuation">-</span>volume
      <span class="token key atrule">hostPath</span><span class="token punctuation">:</span>
        <span class="token key atrule">path</span><span class="token punctuation">:</span> /opt/myapp/html2
        <span class="token key atrule">type</span><span class="token punctuation">:</span> Directory
    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> config2<span class="token punctuation">-</span>volume
      <span class="token key atrule">hostPath</span><span class="token punctuation">:</span>
        <span class="token key atrule">path</span><span class="token punctuation">:</span> /opt/myapp/config2
        <span class="token key atrule">type</span><span class="token punctuation">:</span> Directory
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container warning"><p class="custom-container-title">注意</p><p>Pod 里面所有容器共享 127.0.0.1 IP, 所以它们必须设定不同的服务端口．否则容器启动失败。</p></div>`,35),o=[p];function l(i,c){return s(),a("div",null,o)}const u=n(t,[["render",l],["__file","index.html.vue"]]);export{u as default};
