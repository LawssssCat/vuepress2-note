import{_ as n,o as s,c as a,e as t}from"./app-04e6f892.js";const p={},o=t(`<p>Get - When - Then</p><p>todo mockito/powermock/BaizeTest for java dt</p><p>todo cloudsop/springboot</p><h2 id="mock-和-spy" tabindex="-1"><a class="header-anchor" href="#mock-和-spy" aria-hidden="true">#</a> Mock 和 Spy</h2><h3 id="使用-mock" tabindex="-1"><a class="header-anchor" href="#使用-mock" aria-hidden="true">#</a> 使用 mock</h3><p>Mock 不真正调用方法！</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>Star mock <span class="token operator">=</span> mock<span class="token punctuation">(</span>Star.class<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment"># 模拟返回值</span>
when<span class="token punctuation">(</span>mock.getName<span class="token punctuation">(</span><span class="token punctuation">))</span>.thenReturn<span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment"># 模拟多次返回值</span>
when<span class="token punctuation">(</span>mock.getName<span class="token punctuation">(</span><span class="token punctuation">))</span>.thenReturn<span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span>.thenReturn<span class="token punctuation">(</span><span class="token string">&quot;world&quot;</span><span class="token punctuation">)</span>.thenReturn<span class="token punctuation">(</span><span class="token string">&quot;!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment"># 另一种写法</span>
doReturn<span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span>.doReturn<span class="token punctuation">(</span><span class="token string">&quot;world&quot;</span><span class="token punctuation">)</span>.doReturn<span class="token punctuation">(</span><span class="token string">&quot;!&quot;</span><span class="token punctuation">)</span>.when<span class="token punctuation">(</span>mock<span class="token punctuation">)</span>.getName<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment"># 返回空</span>
doNothing<span class="token punctuation">(</span><span class="token punctuation">)</span>.when<span class="token punctuation">(</span>mock<span class="token punctuation">)</span>.getName<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用-spy" tabindex="-1"><a class="header-anchor" href="#使用-spy" aria-hidden="true">#</a> 使用 spy</h3><p>Spy 会真正调用方法！ 但是 Spy 也可以通过与 mock 相同的方式来打桩 Spy 对象，如： <code>Mockito.doReturn(100).when(spyList).size();</code></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>todo</p><h2 id="场景" tabindex="-1"><a class="header-anchor" href="#场景" aria-hidden="true">#</a> 场景</h2><h3 id="ut-for-spring-service-with-mocked-dao" tabindex="-1"><a class="header-anchor" href="#ut-for-spring-service-with-mocked-dao" aria-hidden="true">#</a> UT for Spring Service with Mocked DAO</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@ContextConfiguration</span><span class="token punctuation">(</span>locations <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;classpath:springContext/pool/applicationContext-ha.xml&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Runwith</span><span class="token punctuation">(</span><span class="token class-name">SpringJUnit4ClassRunner</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HaMonitorTest</span> <span class="token punctuation">{</span>
  <span class="token annotation punctuation">@Autowired</span>
  <span class="token keyword">private</span> <span class="token class-name">HaRepository</span> haRepository<span class="token punctuation">;</span>
  <span class="token keyword">private</span> <span class="token class-name">MonitorService</span> monitorService<span class="token punctuation">;</span>
  <span class="token annotation punctuation">@Mock</span>
  <span class="token keyword">private</span> <span class="token class-name">ConfigurationDao</span> configurationDao<span class="token punctuation">;</span>
  <span class="token annotation punctuation">@Before</span>
  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setUp</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">MockitoAnnotations</span><span class="token punctuation">.</span><span class="token function">initMocks</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    monitorService <span class="token operator">=</span> <span class="token class-name">Mockito</span><span class="token punctuation">.</span><span class="token function">spy</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MonitorServiceImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    monitorService<span class="token punctuation">.</span><span class="token function">setHaRepository</span><span class="token punctuation">(</span>haRepository<span class="token punctuation">)</span><span class="token punctuation">;</span>
    monitorService<span class="token punctuation">.</span><span class="token function">setConfigurationDao</span><span class="token punctuation">(</span>configurationDao<span class="token punctuation">)</span>
    <span class="token class-name">HaDetailVo</span> vo1 <span class="token operator">=</span> <span class="token class-name">TestUtils</span><span class="token punctuation">.</span><span class="token function">createHaDetailVo</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token class-name">Constants</span><span class="token punctuation">.</span><span class="token constant">HA_STATE_RUN</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">HaDetailVo</span> vo2 <span class="token operator">=</span> <span class="token class-name">TestUtils</span><span class="token punctuation">.</span><span class="token function">createHaDetailVo</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token class-name">Constants</span><span class="token punctuation">.</span><span class="token constant">HA_STATE_RUN</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    haRepository<span class="token punctuation">.</span><span class="token function">putHaState</span><span class="token punctuation">(</span>vo1<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> vo1<span class="token punctuation">)</span><span class="token punctuation">;</span>
    haRepository<span class="token punctuation">.</span><span class="token function">putHaState</span><span class="token punctuation">(</span>vo2<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> vo2<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token annotation punctuation">@Test</span>
  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">shouldMonitorReturnActiveHas</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">HaDetailVo</span> vo <span class="token operator">=</span> <span class="token class-name">TestUtils</span><span class="token punctuation">.</span><span class="token function">createHaDetailVo</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token class-name">Constants</span><span class="token punctuation">.</span><span class="token constant">HA_STATE_RUN</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    haRepository<span class="token punctuation">.</span><span class="token function">putHaState</span><span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> vo<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">HaInfo</span><span class="token punctuation">&gt;</span></span> cache <span class="token operator">=</span> monitorService<span class="token punctuation">.</span><span class="token function">getHas</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">long</span> oldTimeStamp <span class="token operator">=</span> <span class="token class-name">SystemTimer</span><span class="token punctuation">.</span><span class="token function">currentTimeSeconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token class-name">SystemTimer</span><span class="token punctuation">.</span><span class="token function">currentTimeSeconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> oldTimeStamp <span class="token operator">&lt;</span> haRepository<span class="token punctuation">.</span><span class="token function">getPeriodSync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      cache <span class="token operator">=</span> monitorService<span class="token punctuation">.</span><span class="token function">getHas</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">when</span><span class="token punctuation">(</span>configurationDao<span class="token punctuation">.</span><span class="token function">getAllHa</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">thenReturn</span><span class="token punctuation">(</span>cache<span class="token punctuation">)</span><span class="token punctuation">;</span>
      monitorService<span class="token punctuation">.</span><span class="token function">monitorHaState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    monitorService<span class="token punctuation">.</span><span class="token function">monitorHaState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> cache<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">assertArrayEquals</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">,</span> cache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getHaCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> cache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getHaCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token class-name">Constants</span><span class="token punctuation">.</span><span class="token constant">HA_STATE_RUN</span><span class="token punctuation">,</span> haRepository<span class="token punctuation">.</span><span class="token function">getHaState</span><span class="token punctuation">(</span>cache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getHaCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getHaState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token class-name">Constants</span><span class="token punctuation">.</span><span class="token constant">HA_STATE_RUN</span><span class="token punctuation">,</span> haRepository<span class="token punctuation">.</span><span class="token function">getHaState</span><span class="token punctuation">(</span>cache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getHaCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getHaState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,14),c=[o];function e(u,i){return s(),a("div",null,c)}const k=n(p,[["render",e],["__file","mockito.html.vue"]]);export{k as default};
